{
 "cells": [
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "<h2>Intro / Key Feature Description</h3>"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "This first table has a row for each vote in each case presented before the US Supreme Court (USSC) from 1946 to 2019. A few essential variable descriptions:\n",
    "<br>\n",
    "<br>\n",
    "<ol>\n",
    "    <li><b>caseId</b> - Unique case ID for each case heard by USSC - first four digits represent the <i>term</i> number (equivalent to year, starting on the first Wednesday in October). The second four digits are the unique case ID within the term. The first case of 2018 reads '2018-001'</li>\n",
    "    <li><b>voteId</b> - caseId + two digits reflecting docket number, plus two digits reflecting issue number, plus two digits representing vote in the case by justice.</li>\n",
    "    <li><b>petitioner</b> - Coded ID number reflecting the type of petitioner (plaintiff, who petitioned to bring the case to the USSC) - full key for this category is available at <a href='http://scdb.wustl.edu/documentation.php?var=petitioner'> the SCDB website</a></li>\n",
    "    <li><b>respondent</b> - Coded ID number reflecting type of respondent (defendant) - full key for this category is available at <a href='http://scdb.wustl.edu/documentation.php?var=respondent'> the SCDB website</a></li>\n",
    "    <li><b>naturalCourt</b> - A \"natural court\", here, refers to courts marked by the departure of an incumbent or arrival of a new judge; there may be leaves of absence wtihin, but there have been 34 classified natural courts since 1946. </li>\n",
    "    <li><b>issue</b> - Coded ID number reflecting the category of issue for this particular case - full key for this category is available at <a href='http://scdb.wustl.edu/documentation.php?var=issue'>the SCDB website</a></li>\n",
    "    <li><b>decisionDirection</b> - <i>Target Variable</i> - this reflects the political persuasion of a decision - 1 is conservative, 2 is liberal, and 3 is \"unsure\" (later removed for the purposes of this project).</li>\n",
    "    <li><b>martin_quinn</b> - This added feature is the <a href='http://mqscores.lsa.umich.edu/index.php'>Martin Quinn score</a>, reflecting the political leaning of a particular judge based on their votes. It is a scale from -6 to 6, with -6 being extremely conservative and 6 being extremely liberal. This score is variable by term, and can be best understood with the visual at the link found above.</li>\n",
    "    \n",
    "</ol>\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "<h3>Create and Merge Tables"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1,
   "metadata": {},
   "outputs": [],
   "source": [
    "import pandas as pd\n",
    "\n",
    "justice_votes = pd.read_csv('SCDB_2020_01_justiceCentered_Vote.csv', encoding='cp1252')\n",
    "martin_quinn = pd.read_csv('martin_quinn.csv')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "metadata": {
    "scrolled": true
   },
   "outputs": [],
   "source": [
    "# create new table with individual justice votes, now with martin_quinn feature\n",
    "supreme = pd.merge(justice_votes, martin_quinn, on=['justice', 'term'], how='left')\n",
    "supreme = supreme.rename(columns={'post_mn': 'martin_quinn'})"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "metadata": {
    "scrolled": true
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "(121971, 121971)"
      ]
     },
     "execution_count": 3,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "len(justice_votes), len(supreme)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "<h3>Removing Uncertain Case Outcomes"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "The decisionDirection feature has three entries (as discussed above) - 1 for conservative, 2 for liberal, and 3 for \"unsure\". \"Unsure\" votes are dropped for the purposes of this project. "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "metadata": {
    "scrolled": true
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "There are 1939 unsure votes.\n"
     ]
    }
   ],
   "source": [
    "# amount of votes in \"unsure\" cases\n",
    "unsure_votes = len(supreme[supreme.decisionDirection==3])\n",
    "print('There are', unsure_votes, 'unsure votes.')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "metadata": {
    "scrolled": false
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "There are 157 unsure cases, and 8877 cases with a certain disposition in the vote.\n"
     ]
    }
   ],
   "source": [
    "# amount of \"unsure\" cases\n",
    "unsure_disposition_cases = supreme[supreme.decisionDirection == 3].groupby('caseId').mean()\n",
    "sure_disposition_cases = supreme[supreme.decisionDirection != 3].groupby('caseId').mean()\n",
    "unsure_cases = len(unsure_disposition_cases)\n",
    "sure_cases = len(sure_disposition_cases)\n",
    "print('There are', unsure_cases, 'unsure cases, and', sure_cases, 'cases with a certain disposition in the vote.')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "1939  = original total of unsure votes. The drop worked!\n"
     ]
    }
   ],
   "source": [
    "# drop all \"unsure\" cases and check\n",
    "indexNames = supreme[supreme.decisionDirection == 3].index\n",
    "new_supreme = supreme.drop(indexNames)\n",
    "\n",
    "print((len(supreme) - len(new_supreme)), ' = original total of unsure votes. The drop worked!')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "metadata": {},
   "outputs": [],
   "source": [
    "new_supreme.reset_index(inplace=True, drop=True)\n",
    "supreme = new_supreme"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "<h3>Variable exploration - Heat map for key variables of interest</h3>"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 223,
   "metadata": {
    "scrolled": false
   },
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 576x576 with 2 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "from corr_plot import *\n",
    "\n",
    "def corrplot(data, size_scale=500, marker='s'):\n",
    "    corr = pd.melt(data.reset_index(), id_vars='index')\n",
    "    corr.columns = ['x', 'y', 'value']\n",
    "    heatmap(\n",
    "        corr['x'], corr['y'],\n",
    "        color=corr['value'], color_range=[-1, 1],\n",
    "        palette=sns.diverging_palette(20, 220, n=256),\n",
    "        size=corr['value'].abs(), size_range=[0,1],\n",
    "        marker=marker,\n",
    "        x_order=data.columns,\n",
    "        y_order=data.columns[::-1],\n",
    "        size_scale=size_scale\n",
    "    )\n",
    "\n",
    "data = supreme[['martin_quinn', 'caseDisposition', 'petitioner', 'respondent', 'jurisdiction', 'adminAction', 'caseOrigin', \n",
    "                'caseSource', 'lcDisagreement',\n",
    "              'certReason', 'lcDisposition', 'lcDispositionDirection', 'term', 'naturalCourt', 'issue', 'issueArea']]\n",
    "\n",
    "corr = data.corr()\n",
    "\n",
    "plt.figure(figsize=(8, 8))\n",
    "corrplot(corr)\n",
    "\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "When looking at some features of interest, it's clear that there is little to no linear correlation. This makes perfect sense - almost every variable is categorical. Here's a first model using the political persuasion of the court at the time to predict case outcome - caseDisposition. "
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "<h3>First Model Development</h3>"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "<h3><font color = 'red'>CAUTION: This code takes an unreasonably long time to run."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "# Drop all cases with split vote, split issue (allow each case to have its true number of votes)\n",
    "\n",
    "for i, vote in enumerate(supreme.docketId):\n",
    "    \n",
    "    if supreme.voteId[i][-11:-3] != '01-01-01':\n",
    "        supreme = supreme.drop([i])\n",
    "    else:\n",
    "        pass"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "<h4>...and back to normal"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "metadata": {},
   "outputs": [],
   "source": [
    "import pandas as pd\n",
    "import numpy as np\n",
    "import matplotlib.pyplot as plt\n",
    "%matplotlib inline\n",
    "\n",
    "from sklearn.neighbors import KNeighborsClassifier\n",
    "from sklearn.metrics import accuracy_score, precision_score, recall_score, f1_score, plot_confusion_matrix\n",
    "from sklearn import metrics\n",
    "from sklearn.metrics import accuracy_score, precision_score, recall_score, roc_auc_score, roc_curve, f1_score, plot_confusion_matrix\n",
    "from sklearn.model_selection import train_test_split\n",
    "from sklearn.linear_model import LogisticRegression\n",
    "from sklearn.naive_bayes import GaussianNB\n",
    "from sklearn.svm import SVC\n",
    "from sklearn.tree import DecisionTreeClassifier\n",
    "from sklearn.ensemble import RandomForestClassifier"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 13,
   "metadata": {},
   "outputs": [],
   "source": [
    "import pandas as pd\n",
    "\n",
    "supreme = pd.read_csv('supreme_1021.csv')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "metadata": {},
   "outputs": [],
   "source": [
    "# Convert decisionDirection to traditional binary (0.0 / 1.0)\n",
    "\n",
    "if supreme.decisionDirection.iloc[1] != 1.0:\n",
    "    supreme.decisionDirection = supreme.decisionDirection - 1"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 14,
   "metadata": {},
   "outputs": [],
   "source": [
    "# Drop 30 Null entries\n",
    "\n",
    "indexNames = supreme[supreme.decisionDirection.isnull()].index\n",
    "supreme = supreme.drop(indexNames)\n",
    "supreme.reset_index(inplace=True, drop=True)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 15,
   "metadata": {},
   "outputs": [],
   "source": [
    "# Drop ~60 cases with null issue output\n",
    "\n",
    "indexNames = supreme[supreme.issue.isnull()].index\n",
    "supreme = supreme.drop(indexNames)\n",
    "supreme.reset_index(inplace=True, drop=True)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "metadata": {},
   "outputs": [],
   "source": [
    "def find_scores(name, model_code):\n",
    "    \n",
    "    # set model variable\n",
    "    model = model_code\n",
    "    \n",
    "    # fit individual model and predict\n",
    "    model.fit(X_train, y_train)\n",
    "    y_pred = model.predict(X_test)\n",
    "    \n",
    "    # Accuracy and F1 Score\n",
    "    score = metrics.accuracy_score(y_test, y_pred)\n",
    "    f1score = f1_score(y_test, y_pred, average='weighted')\n",
    "\n",
    "    # Return Accuray, Precision and F1 score\n",
    "    print(\"{name} accuracy is\".format(name=name), score)\n",
    "    print(\"Precision: {:6.4f},   Recall: {:6.4f}\".format(precision_score(y_test, y_pred, average='weighted'), \n",
    "                                                         recall_score(y_test, y_pred, average='weighted')))\n",
    "    print('f1 score: ', f1score)\n",
    "    score = round(score,4)\n",
    "    \n",
    "    # Create Confusion Matrix\n",
    "    plot_confusion_matrix(model, X_test, y_test)\n",
    "    plt.title('Confusion Matrix for {name} - (Acc - {score})'.format(name=name, score=score));"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "# Disable warnings for easy viewing of function results below\n",
    "\n",
    "import warnings\n",
    "warnings.filterwarnings('ignore')"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "<h3>Split data and run scores on multiple models"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 54,
   "metadata": {
    "scrolled": false
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "KNN accuracy is 0.5688531848946803\n",
      "Precision: 0.5775,   Recall: 0.5689\n",
      "f1 score:  0.5631577993824216\n",
      "LogReg accuracy is 0.6212916693022962\n",
      "Precision: 0.6255,   Recall: 0.6213\n",
      "f1 score:  0.6146018931564621\n",
      "Gaussian accuracy is 0.6102852805364033\n",
      "Precision: 0.6278,   Recall: 0.6103\n",
      "f1 score:  0.58977287111673\n",
      "Decision Tree accuracy is 0.6217977101650959\n",
      "Precision: 0.6240,   Recall: 0.6218\n",
      "f1 score:  0.6173083132873082\n",
      "Random Forest accuracy is 0.6217344550572459\n",
      "Precision: 0.6245,   Recall: 0.6217\n",
      "f1 score:  0.6165343666518893\n"
     ]
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 2 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 2 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 2 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 2 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 2 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "# split data into test and train sets\n",
    "\n",
    "X = supreme[['issue', 'issueArea']]\n",
    "y = supreme['decisionDirection']\n",
    "\n",
    "# hold out 20% of the data for final testing\n",
    "\n",
    "from sklearn.preprocessing import OneHotEncoder\n",
    "from numpy import asarray\n",
    "\n",
    "encoder = OneHotEncoder(sparse=False)\n",
    "\n",
    "#X = asarray(X)\n",
    "#X = X.reshape(-1,1)\n",
    "y = asarray(y)\n",
    "y = y.reshape(-1,1)\n",
    "\n",
    "X = encoder.fit_transform(X)\n",
    "#y = encoder.fit_transform(y)\n",
    "\n",
    "X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=.2, \n",
    "                                         random_state=10)\n",
    "\n",
    "X_train, X_val, y_train, y_val = train_test_split(X_train, y_train, test_size=0.25, random_state=1)\n",
    "\n",
    "\n",
    "find_scores('KNN', KNeighborsClassifier(n_neighbors=10))\n",
    "find_scores('LogReg', LogisticRegression())\n",
    "find_scores('Gaussian', GaussianNB())\n",
    "#find_scores('SVM', SVC(kernel='linear'))\n",
    "find_scores('Decision Tree', DecisionTreeClassifier())\n",
    "find_scores('Random Forest', RandomForestClassifier())"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "<h3>View ROC curves for multiple algorithms"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 55,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 720x432 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "knn = KNeighborsClassifier(n_neighbors=20)\n",
    "knn.fit(X_train,y_train)\n",
    "\n",
    "logistic = LogisticRegression()\n",
    "logistic.fit(X_train,y_train)\n",
    "\n",
    "NB_bern = GaussianNB()\n",
    "NB_bern.fit(X_train,y_train)\n",
    "\n",
    "forest = RandomForestClassifier()\n",
    "forest.fit(X_train, y_train)\n",
    "\n",
    "#svc = SVC()\n",
    "#svc.fit(X_train, y_train)\n",
    "\n",
    "decisiontree = DecisionTreeClassifier()\n",
    "decisiontree.fit(X_train, y_train)\n",
    "\n",
    "\n",
    "fpr_knn, tpr_knn, thresholds_knn = roc_curve(y_test, knn.predict_proba(X_test)[:,1])\n",
    "fpr_log, tpr_log, thresholds_log = roc_curve(y_test, logistic.predict_proba(X_test)[:,1])\n",
    "fpr_nb, tpr_nb, thresholds_nb = roc_curve(y_test, NB_bern.predict_proba(X_test)[:,1])\n",
    "fpr_rf, tpr_rf, thresholds_rf = roc_curve(y_test, forest.predict_proba(X_test)[:,1])\n",
    "#fpr_svc, tpr_svc, thresholds_svc = roc_curve(y_test, svc.predict_proba(X_test)[:,1])\n",
    "fpr_dt, tpr_dt, thresholds_dt = roc_curve(y_test, decisiontree.predict_proba(X_test)[:,1])\n",
    "\n",
    "plt.figure(figsize=(10, 6))\n",
    "plt.plot(fpr_knn, tpr_knn,lw=2)\n",
    "plt.plot(fpr_log, tpr_log,lw=2)\n",
    "plt.plot(fpr_nb, tpr_nb,lw=2)\n",
    "plt.plot(fpr_rf, tpr_rf,lw=2)\n",
    "#plt.plot(fpr_svc, tpr_svc,lw=2)\n",
    "plt.plot(fpr_dt, tpr_dt,lw=2)\n",
    "plt.plot([0,1],[0,1],c='violet')\n",
    "plt.xlim([-0.05,1.05])\n",
    "plt.ylim([-0.05,1.05])\n",
    "plt.xlabel('False positive rate')\n",
    "plt.ylabel('True positive rate')\n",
    "plt.title('ROC Scores for Issue + Issue Area', fontweight='bold', fontsize='20');\n",
    "plt.legend(['KNN','Logit', 'Naive Bayes', 'Random Forest', 'Decision Tree']);\n",
    "\n",
    "# print(“KNN ROC AUC score = “, roc_auc_score(y_test, knn.predict_proba(X_test)[:,1]))\n",
    "# print(“Logit ROC AUC score = “, roc_auc_score(y_test, logistic.predict_proba(X_test)[:,1]))\n",
    "# print(“Naive Bayes ROC AUC score = “, roc_auc_score(y_test, NB_bern.predict_proba(X_test)[:,1]))\n",
    "# print(“Random Forest ROC AUC score = “, roc_auc_score(y_test, forest.predict_proba(X_test)[:,1]))\n",
    "# print(“Support Vector Machines ROC AUC score = “, roc_auc_score(y_test, svc.predict_proba(X_test)[:,1]))\n",
    "# print(“Decision Tree ROC AUC score = “, roc_auc_score(y_test, decisiontree.predict_proba(X_test)[:,1]))\n",
    "\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 344,
   "metadata": {},
   "outputs": [],
   "source": [
    "supreme.to_csv('supreme_1021.csv')"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "<h3>Find Optimal KNN"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 348,
   "metadata": {},
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/Users/nick/opt/anaconda3/envs/metis/lib/python3.8/site-packages/sklearn/model_selection/_search.py:765: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples, ), for example using ravel().\n",
      "  self.best_estimator_.fit(X, y, **fit_params)\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Outcomes from the Best KNN Regression Model:\n",
      "Minimum Average Test MSE: -0.434\n",
      "The optimal n: 20\n"
     ]
    }
   ],
   "source": [
    "from sklearn.model_selection import GridSearchCV\n",
    "\n",
    "KNN_parameters = {'n_neighbors': np.arange(1,21,1)}\n",
    "\n",
    "grid_search = GridSearchCV(estimator=KNeighborsClassifier(), param_grid = KNN_parameters, cv=10, scoring='neg_mean_squared_error', verbose = 0, n_jobs = -1)\n",
    "\n",
    "grid_search.fit(X_train, y_train)\n",
    "print(\"Outcomes from the Best KNN Regression Model:\")\n",
    "print(\"Minimum Average Test MSE:\", grid_search.best_score_.round(3))\n",
    "print(\"The optimal n:\", grid_search.best_params_['n_neighbors'])"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "<h2>Feature Engineering"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "<h3> Subcourt MQ"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 155,
   "metadata": {
    "scrolled": false
   },
   "outputs": [],
   "source": [
    "# Establish Groupby DF to match each naturalCourt with summed Martin-Quinn score\n",
    "\n",
    "test = supreme.groupby(['naturalCourt','caseId','term']).sum()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 156,
   "metadata": {},
   "outputs": [],
   "source": [
    "# Create lists for unique naturalCourts and unique Court Martin-Quinn scores\n",
    "\n",
    "courts_list = []\n",
    "\n",
    "for i, court in enumerate(test.index):\n",
    "    \n",
    "    rounded = round(test.index[i][0],3)\n",
    "    \n",
    "    if rounded not in courts_list:\n",
    "        courts_list.append(rounded)\n",
    "    else:\n",
    "        pass\n",
    "      \n",
    "combined_martin_quinn_list = []\n",
    "    \n",
    "for i, score in enumerate(test.martin_quinn):\n",
    "    \n",
    "    rounded = round(test.iloc[i]['martin_quinn'],3)\n",
    "    \n",
    "    if rounded not in combined_martin_quinn_list:\n",
    "        combined_martin_quinn_list.append(rounded)\n",
    "    else:\n",
    "        pass\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Most natural courts have a 'subcourt' when the vote was impacted for one reason or another - extended leave, etc. The subcourt list holds 104 unique court values for each of these cases."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 157,
   "metadata": {},
   "outputs": [],
   "source": [
    "subcourt_list = ['1301-01', '1301-02', '1301-03', '1303-01', '1303-02', '1303-03', '1303-04', '1303-05', '1401-01',\n",
    "                '1402-01', '1403-01', '1403-02', '1403-03', '1404-01', '1405-01', '1405-02', '1405-03', '1405-04', \n",
    "                '1406-01', '1406-02', '1406-03', '1406-04', '1407-01', '1407-02', '1408-01', '1408-02', '1408-03',\n",
    "                '1408-04', '1409-01', '1409-02', '1410-01', '1410-02', '1411-01', '1501-01', '1502-01', '1502-02',\n",
    "                '1503-01', '1504-01', '1504-02', '1504-03', '1504-04', '1504-05', '1505-01', '1506-01', '1506-02',\n",
    "                '1506-03', '1506-04', '1506-05', '1506-06', '1507-01', '1507-02', '1507-03', '1507-04', '1507-05',\n",
    "                '1601-01', '1602-01', '1603-01', '1603-02', '1603-03', '1604-01', '1604-02', '1605-01', '1605-02',\n",
    "                '1605-03', '1605-04', '1606-01', '1607-01', '1607-02', '1607-03', '1607-04', '1607-05', '1607-06',\n",
    "                '1607-07', '1607-08', '1607-09', '1609-10', '1609-11', '1609-12', '1609-13', '1609-14', '1609-15',\n",
    "                '1609-16', '1609-17','1701-01', '1702-01', '1702-02', '1702-03', '1702-04', '1702-05', '1702-06', \n",
    "                '1703-01', '1704-01', '1704-02', '1704-03', '1704-04', '1704-05', '1704-06', '1704-07', '1705-01',\n",
    "                '1705-02', '1706-01', '1706-02', '1707-01', '1707-02']"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 158,
   "metadata": {},
   "outputs": [],
   "source": [
    "# Create list pairing each sub-court with their subsequent martin_quinn score\n",
    "\n",
    "subcourt_mq_ref = zip(subcourt_list, combined_martin_quinn_list)\n",
    "subcourt_mq_ref = list(subcourt_mq_ref)\n",
    "\n",
    "# Turns all naturalCourt values to string\n",
    "\n",
    "supreme.naturalCourt = supreme.naturalCourt.astype('str')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 161,
   "metadata": {},
   "outputs": [],
   "source": [
    "# Rounding MQ for classification\n",
    "\n",
    "test['martin_quinn'] = [round(i,3) for i in test['martin_quinn']]\n",
    "\n",
    "# Test for 104 unique values\n",
    "\n",
    "len(test['martin_quinn'].unique())"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 164,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "104"
      ]
     },
     "execution_count": 164,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Creating list of relative Court MQ score\n",
    "\n",
    "mq_list = []\n",
    "\n",
    "for i, number in enumerate(test.martin_quinn):\n",
    "    for n, mq in enumerate(subcourt_mq_ref):\n",
    "        if number == subcourt_mq_ref[n][1]:\n",
    "            mq_list.append(subcourt_mq_ref[n][1])\n",
    "            break\n",
    "\n",
    "# Confirming 104 unique values in list of martin_quinn scores\n",
    "\n",
    "set_list = set(mq_list)\n",
    "len(set_list)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 166,
   "metadata": {},
   "outputs": [],
   "source": [
    "# Set Groupby column MQ value to calculated per court\n",
    "\n",
    "test.martin_quinn = mq_list"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 139,
   "metadata": {},
   "outputs": [],
   "source": [
    "# Set new list of subcourts in preparation for implementing to main df\n",
    "\n",
    "subcourt_list2 = []\n",
    "\n",
    "for i, naturalCourt in enumerate(supreme.naturalCourt):\n",
    "    for n, subcourt in enumerate(subcourt_mq_ref):\n",
    "        if supreme.naturalCourt[i] == subcourt_mq_ref[n][0][:4]:\n",
    "            subcourt_list2.append(subcourt_mq_ref[n][1])\n",
    "            break\n",
    "        "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 175,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "104"
      ]
     },
     "execution_count": 175,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Setting subcourt value based on MQ\n",
    "\n",
    "final_list = []\n",
    "\n",
    "for i, number in enumerate(test.martin_quinn):\n",
    "    for n, mq in enumerate(subcourt_mq_ref):\n",
    "        if number == subcourt_mq_ref[n][1]:\n",
    "            final_list.append(subcourt_mq_ref[n][0])\n",
    "            break\n",
    "\n",
    "# Confirming 104 unique values in list of martin_quinn scores\n",
    "\n",
    "len(set(final_list))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 176,
   "metadata": {},
   "outputs": [],
   "source": [
    "# Assign list to test (aka Groupby) table, now to be classified\n",
    "\n",
    "test['subCourt'] = final_list"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 185,
   "metadata": {},
   "outputs": [],
   "source": [
    "# Assigning final subcourt list to master supreme dataset\n",
    "\n",
    "subcourt_list3 = []\n",
    "\n",
    "for i, caseid in enumerate(supreme.caseId):\n",
    "    for n, subcourt in enumerate(final_list):\n",
    "        if supreme.caseId[i] == test.index[n][1]:\n",
    "            subcourt_list3.append(final_list[n])\n",
    "            break"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 189,
   "metadata": {},
   "outputs": [],
   "source": [
    "supreme['subCourt'] = subcourt_list3"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 217,
   "metadata": {},
   "outputs": [],
   "source": [
    "# Next function is assigning Court_MQ, based on subcourt\n",
    "court_mq_list = []\n",
    "\n",
    "for i, subcourt in enumerate(supreme.subCourt):\n",
    "    for n, mq in enumerate(subcourt_mq_ref):\n",
    "        if supreme.iloc[i].subCourt == subcourt_mq_ref[n][0]:\n",
    "            court_mq_list.append(subcourt_mq_ref[n][1])\n",
    "            break"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 219,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "104"
      ]
     },
     "execution_count": 219,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Confirming 104 unique values in list of Court MQ scores\n",
    "\n",
    "len(set(court_mq_list))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 220,
   "metadata": {},
   "outputs": [],
   "source": [
    "supreme['subCourt_MQ'] = court_mq_list"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "<h2>Model Development"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 24,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Index(['Unnamed: 0', 'Unnamed: 0.1', 'caseId', 'docketId', 'caseIssuesId',\n",
       "       'voteId', 'dateDecision', 'decisionType', 'usCite', 'sctCite',\n",
       "       'ledCite', 'lexisCite', 'term', 'naturalCourt', 'chief', 'docket',\n",
       "       'caseName', 'dateArgument', 'dateRearg', 'petitioner',\n",
       "       'petitionerState', 'respondent', 'respondentState', 'jurisdiction',\n",
       "       'adminAction', 'adminActionState', 'threeJudgeFdc', 'caseOrigin',\n",
       "       'caseOriginState', 'caseSource', 'caseSourceState', 'lcDisagreement',\n",
       "       'certReason', 'lcDisposition', 'lcDispositionDirection',\n",
       "       'declarationUncon', 'caseDisposition', 'caseDispositionUnusual',\n",
       "       'partyWinning', 'precedentAlteration', 'voteUnclear', 'issue',\n",
       "       'issueArea', 'decisionDirection', 'decisionDirectionDissent',\n",
       "       'authorityDecision1', 'authorityDecision2', 'lawType', 'lawSupp',\n",
       "       'lawMinor', 'majOpinWriter', 'majOpinAssigner', 'splitVote', 'majVotes',\n",
       "       'minVotes', 'justice', 'justiceName_x', 'vote', 'opinion', 'direction',\n",
       "       'majority', 'firstAgreement', 'secondAgreement', 'justiceName_y',\n",
       "       'martin_quinn', 'post_sd', 'post_med', 'post_025', 'post_975',\n",
       "       'subCourt', 'subCourt_MQ'],\n",
       "      dtype='object')"
      ]
     },
     "execution_count": 24,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "supreme.columns"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "<h1>Addition of petitioner + respondent variables"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 66,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "KNN accuracy is 0.95376051616168\n",
      "Precision: 0.9539,   Recall: 0.9538\n",
      "f1 score:  0.9537696510713325\n",
      "LogReg accuracy is 0.6940982984375988\n",
      "Precision: 0.6944,   Recall: 0.6941\n",
      "f1 score:  0.6933627516357271\n",
      "Gaussian accuracy is 0.6697450819153646\n",
      "Precision: 0.6704,   Recall: 0.6697\n",
      "f1 score:  0.6684127900745793\n",
      "Decision Tree accuracy is 0.9726105383009678\n",
      "Precision: 0.9726,   Recall: 0.9726\n",
      "f1 score:  0.9726118161458559\n",
      "Random Forest accuracy is 0.9726105383009678\n",
      "Precision: 0.9726,   Recall: 0.9726\n",
      "f1 score:  0.9726091230699817\n"
     ]
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 2 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 2 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 2 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 2 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 2 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "# split data into test and train sets\n",
    "\n",
    "X = supreme[['subCourt_MQ', 'issue', 'issueArea', 'petitioner', 'respondent']]\n",
    "y = supreme['decisionDirection']\n",
    "\n",
    "# hold out 20% of the data for final testing\n",
    "\n",
    "from sklearn.preprocessing import OneHotEncoder\n",
    "from numpy import asarray\n",
    "\n",
    "encoder = OneHotEncoder(sparse=False)\n",
    "\n",
    "#X = asarray(X)\n",
    "#X = X.reshape(-1,1)\n",
    "y = asarray(y)\n",
    "y = y.reshape(-1,1)\n",
    "\n",
    "X = encoder.fit_transform(X)\n",
    "#y = encoder.fit_transform(y)\n",
    "\n",
    "X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=.2, \n",
    "                                         random_state=10)\n",
    "\n",
    "X_train, X_val, y_train, y_val = train_test_split(X_train, y_train, test_size=0.25, random_state=1)\n",
    "\n",
    "find_scores('KNN', KNeighborsClassifier(n_neighbors=10))\n",
    "find_scores('LogReg', LogisticRegression())\n",
    "find_scores('Gaussian', GaussianNB())\n",
    "#find_scores('SVM', SVC(kernel='linear'))\n",
    "find_scores('Decision Tree', DecisionTreeClassifier())\n",
    "find_scores('Random Forest', RandomForestClassifier())"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 67,
   "metadata": {
    "scrolled": false
   },
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 720x432 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "#y_test_bin = y_test.map({'France': 0, 'US': 1})\n",
    "\n",
    "knn = KNeighborsClassifier(n_neighbors=10)\n",
    "knn.fit(X_train,y_train)\n",
    "\n",
    "logistic = LogisticRegression()\n",
    "logistic.fit(X_train,y_train)\n",
    "\n",
    "NB_bern = GaussianNB()\n",
    "NB_bern.fit(X_train,y_train)\n",
    "\n",
    "forest = RandomForestClassifier()\n",
    "forest.fit(X_train, y_train)\n",
    "\n",
    "svc = SVC(probability=True)\n",
    "svc.fit(X_train, y_train)\n",
    "\n",
    "decisiontree = DecisionTreeClassifier()\n",
    "decisiontree.fit(X_train, y_train)\n",
    "\n",
    "\n",
    "fpr_knn, tpr_knn, thresholds_knn = roc_curve(y_test, knn.predict_proba(X_test)[:,1])\n",
    "fpr_log, tpr_log, thresholds_log = roc_curve(y_test, logistic.predict_proba(X_test)[:,1])\n",
    "fpr_nb, tpr_nb, thresholds_nb = roc_curve(y_test, NB_bern.predict_proba(X_test)[:,1])\n",
    "fpr_rf, tpr_rf, thresholds_rf = roc_curve(y_test, forest.predict_proba(X_test)[:,1])\n",
    "fpr_svc, tpr_svc, thresholds_svc = roc_curve(y_test, svc.predict_proba(X_test)[:,1])\n",
    "fpr_dt, tpr_dt, thresholds_dt = roc_curve(y_test, decisiontree.predict_proba(X_test)[:,1])\n",
    "\n",
    "plt.figure(figsize=(10, 6))\n",
    "plt.plot(fpr_knn, tpr_knn,lw=2)\n",
    "plt.plot(fpr_log, tpr_log,lw=2)\n",
    "plt.plot(fpr_nb, tpr_nb,lw=2)\n",
    "plt.plot(fpr_rf, tpr_rf,lw=2)\n",
    "plt.plot(fpr_svc, tpr_svc,lw=2)\n",
    "plt.plot(fpr_dt, tpr_dt,lw=2)\n",
    "plt.plot([0,1],[0,1],c='violet')\n",
    "plt.xlim([-0.05,1.05])\n",
    "plt.ylim([-0.05,1.05])\n",
    "plt.xlabel('False positive rate')\n",
    "plt.ylabel('True positive rate')\n",
    "plt.title('ROC Curves for Petitioner/Respondent, Court MQ, Issue', fontweight='bold', fontsize='16');\n",
    "plt.legend(['KNN','Logistic', 'Naive Bayes', 'Random Forest', 'SVC', 'Decision Tree']);\n",
    "\n",
    "# print(“KNN ROC AUC score = “, roc_auc_score(y_test, knn.predict_proba(X_test)[:,1]))\n",
    "# print(“Logit ROC AUC score = “, roc_auc_score(y_test, logistic.predict_proba(X_test)[:,1]))\n",
    "# print(“Naive Bayes ROC AUC score = “, roc_auc_score(y_test, NB_bern.predict_proba(X_test)[:,1]))\n",
    "# print(“Random Forest ROC AUC score = “, roc_auc_score(y_test, forest.predict_proba(X_test)[:,1]))\n",
    "# print(“Support Vector Machines ROC AUC score = “, roc_auc_score(y_test, svc.predict_proba(X_test)[:,1]))\n",
    "# print(“Decision Tree ROC AUC score = “, roc_auc_score(y_test, decisiontree.predict_proba(X_test)[:,1]))\n",
    "\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "<h3>5-feature models - CONTINUOUS"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "metadata": {},
   "outputs": [],
   "source": [
    "supreme = pd.read_csv('data/supreme_1023.csv')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "KNN accuracy is 0.7872098171927383\n",
      "Precision: 0.7874,   Recall: 0.7872\n",
      "f1 score:  0.7870091302291781\n",
      "LogReg accuracy is 0.5782781959643242\n",
      "Precision: 0.5781,   Recall: 0.5783\n",
      "f1 score:  0.5781301955780286\n",
      "Gaussian accuracy is 0.5870706559554684\n",
      "Precision: 0.5915,   Recall: 0.5871\n",
      "f1 score:  0.5854252755575965\n",
      "Decision Tree accuracy is 0.9726105383009678\n",
      "Precision: 0.9726,   Recall: 0.9726\n",
      "f1 score:  0.9726118161458559\n",
      "Random Forest accuracy is 0.9726105383009678\n",
      "Precision: 0.9726,   Recall: 0.9726\n",
      "f1 score:  0.9726099325289207\n"
     ]
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 2 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 2 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 2 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 2 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 2 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "# split data into test and train sets\n",
    "\n",
    "from project_functions import find_scores\n",
    "\n",
    "X = supreme[['subCourt_MQ', 'issue', 'issueArea', 'petitioner', 'respondent']]\n",
    "y = supreme['decisionDirection']\n",
    "\n",
    "X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=.2, \n",
    "                                         random_state=10)\n",
    "\n",
    "X_train, X_val, y_train, y_val = train_test_split(X_train, y_train, test_size=0.25, random_state=1)\n",
    "\n",
    "find_scores(X, y, 'KNN', KNeighborsClassifier(n_neighbors=20))\n",
    "find_scores(X, y, 'LogReg', LogisticRegression())\n",
    "find_scores(X, y, 'Gaussian', GaussianNB())\n",
    "#find_scores(X, y, 'SVM', SVC(kernel='linear'))\n",
    "find_scores(X, y, 'Decision Tree', DecisionTreeClassifier())\n",
    "find_scores(X, y, 'Random Forest', RandomForestClassifier())"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 720x432 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "#y_test_bin = y_test.map({'France': 0, 'US': 1})\n",
    "\n",
    "knn = KNeighborsClassifier(n_neighbors=10)\n",
    "knn.fit(X_train,y_train)\n",
    "\n",
    "logistic = LogisticRegression()\n",
    "logistic.fit(X_train,y_train)\n",
    "\n",
    "NB_bern = GaussianNB()\n",
    "NB_bern.fit(X_train,y_train)\n",
    "\n",
    "forest = RandomForestClassifier()\n",
    "forest.fit(X_train, y_train)\n",
    "\n",
    "#svc = SVC(probability=True)\n",
    "#svc.fit(X_train, y_train)\n",
    "\n",
    "decisiontree = DecisionTreeClassifier()\n",
    "decisiontree.fit(X_train, y_train)\n",
    "\n",
    "\n",
    "fpr_knn, tpr_knn, thresholds_knn = roc_curve(y_test, knn.predict_proba(X_test)[:,1])\n",
    "fpr_log, tpr_log, thresholds_log = roc_curve(y_test, logistic.predict_proba(X_test)[:,1])\n",
    "fpr_nb, tpr_nb, thresholds_nb = roc_curve(y_test, NB_bern.predict_proba(X_test)[:,1])\n",
    "fpr_rf, tpr_rf, thresholds_rf = roc_curve(y_test, forest.predict_proba(X_test)[:,1])\n",
    "#fpr_svc, tpr_svc, thresholds_svc = roc_curve(y_test, svc.predict_proba(X_test)[:,1])\n",
    "fpr_dt, tpr_dt, thresholds_dt = roc_curve(y_test, decisiontree.predict_proba(X_test)[:,1])\n",
    "\n",
    "plt.figure(figsize=(10, 6))\n",
    "plt.plot(fpr_knn, tpr_knn,lw=2)\n",
    "plt.plot(fpr_log, tpr_log,lw=2)\n",
    "plt.plot(fpr_nb, tpr_nb,lw=2)\n",
    "plt.plot(fpr_rf, tpr_rf,lw=2)\n",
    "#plt.plot(fpr_svc, tpr_svc,lw=2)\n",
    "plt.plot(fpr_dt, tpr_dt,lw=2)\n",
    "plt.plot([0,1],[0,1],c='violet')\n",
    "plt.xlim([-0.05,1.05])\n",
    "plt.ylim([-0.05,1.05])\n",
    "plt.xlabel('False positive rate')\n",
    "plt.ylabel('True positive rate')\n",
    "plt.title('ROC Curves for Petitioner/Respondent, Court MQ, Issue', fontweight='bold', fontsize='16');\n",
    "plt.legend(['KNN','Logistic', 'Naive Bayes', 'Random Forest', 'Decision Tree']);\n",
    "\n",
    "# print(“KNN ROC AUC score = “, roc_auc_score(y_test, knn.predict_proba(X_test)[:,1]))\n",
    "# print(“Logit ROC AUC score = “, roc_auc_score(y_test, logistic.predict_proba(X_test)[:,1]))\n",
    "# print(“Naive Bayes ROC AUC score = “, roc_auc_score(y_test, NB_bern.predict_proba(X_test)[:,1]))\n",
    "# print(“Random Forest ROC AUC score = “, roc_auc_score(y_test, forest.predict_proba(X_test)[:,1]))\n",
    "# print(“Support Vector Machines ROC AUC score = “, roc_auc_score(y_test, svc.predict_proba(X_test)[:,1]))\n",
    "# print(“Decision Tree ROC AUC score = “, roc_auc_score(y_test, decisiontree.predict_proba(X_test)[:,1]))\n",
    "\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "filename. ="
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 21,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "19421"
      ]
     },
     "execution_count": 21,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "13045+6376"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 25,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th>Unnamed: 0</th>\n",
       "      <th>Unnamed: 0.1</th>\n",
       "      <th>Unnamed: 0.1.1</th>\n",
       "      <th>decisionType</th>\n",
       "      <th>term</th>\n",
       "      <th>naturalCourt</th>\n",
       "      <th>petitioner</th>\n",
       "      <th>petitionerState</th>\n",
       "      <th>respondent</th>\n",
       "      <th>respondentState</th>\n",
       "      <th>...</th>\n",
       "      <th>direction</th>\n",
       "      <th>majority</th>\n",
       "      <th>firstAgreement</th>\n",
       "      <th>secondAgreement</th>\n",
       "      <th>martin_quinn</th>\n",
       "      <th>post_sd</th>\n",
       "      <th>post_med</th>\n",
       "      <th>post_025</th>\n",
       "      <th>post_975</th>\n",
       "      <th>subCourt_MQ</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>issue</th>\n",
       "      <th>decisionDirection</th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th rowspan=\"2\" valign=\"top\">10010.0</th>\n",
       "      <th>0.0</th>\n",
       "      <td>4114764</td>\n",
       "      <td>4118193</td>\n",
       "      <td>6697673</td>\n",
       "      <td>334</td>\n",
       "      <td>349906</td>\n",
       "      <td>256837</td>\n",
       "      <td>13981.0</td>\n",
       "      <td>1219.0</td>\n",
       "      <td>10952.0</td>\n",
       "      <td>2332.0</td>\n",
       "      <td>...</td>\n",
       "      <td>216.0</td>\n",
       "      <td>300.0</td>\n",
       "      <td>2241.0</td>\n",
       "      <td>80.0</td>\n",
       "      <td>-27.901</td>\n",
       "      <td>48.672</td>\n",
       "      <td>-27.749</td>\n",
       "      <td>-123.424</td>\n",
       "      <td>66.960</td>\n",
       "      <td>-238.837</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1.0</th>\n",
       "      <td>7751181</td>\n",
       "      <td>7758597</td>\n",
       "      <td>12680224</td>\n",
       "      <td>888</td>\n",
       "      <td>773317</td>\n",
       "      <td>555538</td>\n",
       "      <td>42901.0</td>\n",
       "      <td>549.0</td>\n",
       "      <td>13336.0</td>\n",
       "      <td>8575.0</td>\n",
       "      <td>...</td>\n",
       "      <td>697.0</td>\n",
       "      <td>698.0</td>\n",
       "      <td>3726.0</td>\n",
       "      <td>186.0</td>\n",
       "      <td>-205.681</td>\n",
       "      <td>104.924</td>\n",
       "      <td>-204.972</td>\n",
       "      <td>-413.157</td>\n",
       "      <td>-2.709</td>\n",
       "      <td>-1843.440</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th rowspan=\"2\" valign=\"top\">10020.0</th>\n",
       "      <th>0.0</th>\n",
       "      <td>63212369</td>\n",
       "      <td>63266090</td>\n",
       "      <td>98834036</td>\n",
       "      <td>1945</td>\n",
       "      <td>2267171</td>\n",
       "      <td>1806784</td>\n",
       "      <td>79546.0</td>\n",
       "      <td>15935.0</td>\n",
       "      <td>125727.0</td>\n",
       "      <td>10377.0</td>\n",
       "      <td>...</td>\n",
       "      <td>1330.0</td>\n",
       "      <td>2022.0</td>\n",
       "      <td>16628.0</td>\n",
       "      <td>532.0</td>\n",
       "      <td>235.876</td>\n",
       "      <td>343.277</td>\n",
       "      <td>234.982</td>\n",
       "      <td>-433.206</td>\n",
       "      <td>911.108</td>\n",
       "      <td>2134.689</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1.0</th>\n",
       "      <td>39348729</td>\n",
       "      <td>39382857</td>\n",
       "      <td>61794400</td>\n",
       "      <td>1116</td>\n",
       "      <td>1634646</td>\n",
       "      <td>1276994</td>\n",
       "      <td>98608.0</td>\n",
       "      <td>3924.0</td>\n",
       "      <td>48929.0</td>\n",
       "      <td>14094.0</td>\n",
       "      <td>...</td>\n",
       "      <td>1433.0</td>\n",
       "      <td>1439.0</td>\n",
       "      <td>12216.0</td>\n",
       "      <td>2022.0</td>\n",
       "      <td>-46.863</td>\n",
       "      <td>248.930</td>\n",
       "      <td>-46.658</td>\n",
       "      <td>-534.340</td>\n",
       "      <td>439.940</td>\n",
       "      <td>-391.035</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>10030.0</th>\n",
       "      <th>0.0</th>\n",
       "      <td>9066759</td>\n",
       "      <td>9074886</td>\n",
       "      <td>14342797</td>\n",
       "      <td>220</td>\n",
       "      <td>400569</td>\n",
       "      <td>310272</td>\n",
       "      <td>12967.0</td>\n",
       "      <td>2834.0</td>\n",
       "      <td>18501.0</td>\n",
       "      <td>1400.0</td>\n",
       "      <td>...</td>\n",
       "      <td>238.0</td>\n",
       "      <td>364.0</td>\n",
       "      <td>2897.0</td>\n",
       "      <td>103.0</td>\n",
       "      <td>14.646</td>\n",
       "      <td>58.613</td>\n",
       "      <td>14.597</td>\n",
       "      <td>-99.938</td>\n",
       "      <td>129.421</td>\n",
       "      <td>160.724</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>120040.0</th>\n",
       "      <th>1.0</th>\n",
       "      <td>1040040</td>\n",
       "      <td>1041012</td>\n",
       "      <td>1661274</td>\n",
       "      <td>36</td>\n",
       "      <td>53370</td>\n",
       "      <td>40653</td>\n",
       "      <td>5220.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>2565.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>...</td>\n",
       "      <td>52.0</td>\n",
       "      <td>52.0</td>\n",
       "      <td>103.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>-8.066</td>\n",
       "      <td>7.493</td>\n",
       "      <td>-8.033</td>\n",
       "      <td>-22.865</td>\n",
       "      <td>6.503</td>\n",
       "      <td>-72.594</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th rowspan=\"2\" valign=\"top\">130015.0</th>\n",
       "      <th>0.0</th>\n",
       "      <td>1292290</td>\n",
       "      <td>1293361</td>\n",
       "      <td>1977553</td>\n",
       "      <td>17</td>\n",
       "      <td>34245</td>\n",
       "      <td>28976</td>\n",
       "      <td>6494.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>2567.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>...</td>\n",
       "      <td>19.0</td>\n",
       "      <td>32.0</td>\n",
       "      <td>428.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>-3.742</td>\n",
       "      <td>6.093</td>\n",
       "      <td>-3.771</td>\n",
       "      <td>-15.634</td>\n",
       "      <td>8.258</td>\n",
       "      <td>-30.233</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1.0</th>\n",
       "      <td>3417318</td>\n",
       "      <td>3420153</td>\n",
       "      <td>5227767</td>\n",
       "      <td>99</td>\n",
       "      <td>90648</td>\n",
       "      <td>76725</td>\n",
       "      <td>7542.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>10755.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>...</td>\n",
       "      <td>78.0</td>\n",
       "      <td>76.0</td>\n",
       "      <td>767.0</td>\n",
       "      <td>105.0</td>\n",
       "      <td>-2.570</td>\n",
       "      <td>16.748</td>\n",
       "      <td>-2.555</td>\n",
       "      <td>-35.180</td>\n",
       "      <td>30.383</td>\n",
       "      <td>-23.130</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>140030.0</th>\n",
       "      <th>0.0</th>\n",
       "      <td>699264</td>\n",
       "      <td>699831</td>\n",
       "      <td>1065987</td>\n",
       "      <td>18</td>\n",
       "      <td>18153</td>\n",
       "      <td>15354</td>\n",
       "      <td>1098.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>2070.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>...</td>\n",
       "      <td>9.0</td>\n",
       "      <td>18.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>-2.213</td>\n",
       "      <td>3.224</td>\n",
       "      <td>-2.208</td>\n",
       "      <td>-8.409</td>\n",
       "      <td>4.133</td>\n",
       "      <td>-19.917</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>140060.0</th>\n",
       "      <th>1.0</th>\n",
       "      <td>701775</td>\n",
       "      <td>702342</td>\n",
       "      <td>1068741</td>\n",
       "      <td>9</td>\n",
       "      <td>18162</td>\n",
       "      <td>15363</td>\n",
       "      <td>1656.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1872.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>...</td>\n",
       "      <td>15.0</td>\n",
       "      <td>15.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>-2.338</td>\n",
       "      <td>3.425</td>\n",
       "      <td>-2.319</td>\n",
       "      <td>-9.010</td>\n",
       "      <td>4.339</td>\n",
       "      <td>-21.042</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>500 rows × 52 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "                            Unnamed: 0  Unnamed: 0.1  Unnamed: 0.1.1  \\\n",
       "issue    decisionDirection                                             \n",
       "10010.0  0.0                   4114764       4118193         6697673   \n",
       "         1.0                   7751181       7758597        12680224   \n",
       "10020.0  0.0                  63212369      63266090        98834036   \n",
       "         1.0                  39348729      39382857        61794400   \n",
       "10030.0  0.0                   9066759       9074886        14342797   \n",
       "...                                ...           ...             ...   \n",
       "120040.0 1.0                   1040040       1041012         1661274   \n",
       "130015.0 0.0                   1292290       1293361         1977553   \n",
       "         1.0                   3417318       3420153         5227767   \n",
       "140030.0 0.0                    699264        699831         1065987   \n",
       "140060.0 1.0                    701775        702342         1068741   \n",
       "\n",
       "                            decisionType     term  naturalCourt  petitioner  \\\n",
       "issue    decisionDirection                                                    \n",
       "10010.0  0.0                         334   349906        256837     13981.0   \n",
       "         1.0                         888   773317        555538     42901.0   \n",
       "10020.0  0.0                        1945  2267171       1806784     79546.0   \n",
       "         1.0                        1116  1634646       1276994     98608.0   \n",
       "10030.0  0.0                         220   400569        310272     12967.0   \n",
       "...                                  ...      ...           ...         ...   \n",
       "120040.0 1.0                          36    53370         40653      5220.0   \n",
       "130015.0 0.0                          17    34245         28976      6494.0   \n",
       "         1.0                          99    90648         76725      7542.0   \n",
       "140030.0 0.0                          18    18153         15354      1098.0   \n",
       "140060.0 1.0                           9    18162         15363      1656.0   \n",
       "\n",
       "                            petitionerState  respondent  respondentState  ...  \\\n",
       "issue    decisionDirection                                                ...   \n",
       "10010.0  0.0                         1219.0     10952.0           2332.0  ...   \n",
       "         1.0                          549.0     13336.0           8575.0  ...   \n",
       "10020.0  0.0                        15935.0    125727.0          10377.0  ...   \n",
       "         1.0                         3924.0     48929.0          14094.0  ...   \n",
       "10030.0  0.0                         2834.0     18501.0           1400.0  ...   \n",
       "...                                     ...         ...              ...  ...   \n",
       "120040.0 1.0                            0.0      2565.0              0.0  ...   \n",
       "130015.0 0.0                            0.0      2567.0              0.0  ...   \n",
       "         1.0                            0.0     10755.0              0.0  ...   \n",
       "140030.0 0.0                            0.0      2070.0              0.0  ...   \n",
       "140060.0 1.0                            0.0      1872.0              0.0  ...   \n",
       "\n",
       "                            direction  majority  firstAgreement  \\\n",
       "issue    decisionDirection                                        \n",
       "10010.0  0.0                    216.0     300.0          2241.0   \n",
       "         1.0                    697.0     698.0          3726.0   \n",
       "10020.0  0.0                   1330.0    2022.0         16628.0   \n",
       "         1.0                   1433.0    1439.0         12216.0   \n",
       "10030.0  0.0                    238.0     364.0          2897.0   \n",
       "...                               ...       ...             ...   \n",
       "120040.0 1.0                     52.0      52.0           103.0   \n",
       "130015.0 0.0                     19.0      32.0           428.0   \n",
       "         1.0                     78.0      76.0           767.0   \n",
       "140030.0 0.0                      9.0      18.0             0.0   \n",
       "140060.0 1.0                     15.0      15.0             0.0   \n",
       "\n",
       "                            secondAgreement  martin_quinn  post_sd  post_med  \\\n",
       "issue    decisionDirection                                                     \n",
       "10010.0  0.0                           80.0       -27.901   48.672   -27.749   \n",
       "         1.0                          186.0      -205.681  104.924  -204.972   \n",
       "10020.0  0.0                          532.0       235.876  343.277   234.982   \n",
       "         1.0                         2022.0       -46.863  248.930   -46.658   \n",
       "10030.0  0.0                          103.0        14.646   58.613    14.597   \n",
       "...                                     ...           ...      ...       ...   \n",
       "120040.0 1.0                            0.0        -8.066    7.493    -8.033   \n",
       "130015.0 0.0                            0.0        -3.742    6.093    -3.771   \n",
       "         1.0                          105.0        -2.570   16.748    -2.555   \n",
       "140030.0 0.0                            0.0        -2.213    3.224    -2.208   \n",
       "140060.0 1.0                            0.0        -2.338    3.425    -2.319   \n",
       "\n",
       "                            post_025  post_975  subCourt_MQ  \n",
       "issue    decisionDirection                                   \n",
       "10010.0  0.0                -123.424    66.960     -238.837  \n",
       "         1.0                -413.157    -2.709    -1843.440  \n",
       "10020.0  0.0                -433.206   911.108     2134.689  \n",
       "         1.0                -534.340   439.940     -391.035  \n",
       "10030.0  0.0                 -99.938   129.421      160.724  \n",
       "...                              ...       ...          ...  \n",
       "120040.0 1.0                 -22.865     6.503      -72.594  \n",
       "130015.0 0.0                 -15.634     8.258      -30.233  \n",
       "         1.0                 -35.180    30.383      -23.130  \n",
       "140030.0 0.0                  -8.409     4.133      -19.917  \n",
       "140060.0 1.0                  -9.010     4.339      -21.042  \n",
       "\n",
       "[500 rows x 52 columns]"
      ]
     },
     "execution_count": 25,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "supreme.groupby(['issue','decisionDirection']).sum()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 33,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array([ 8.,  1.,  2.,  9.,  7.,  4., 12.,  3.,  5., 10.,  6., 13., 14.])"
      ]
     },
     "execution_count": 33,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "supreme['issueArea'].unique()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 44,
   "metadata": {
    "scrolled": false
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "0.0    710\n",
       "1.0    340\n",
       "Name: decisionDirection, dtype: int64"
      ]
     },
     "execution_count": 44,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "supreme[supreme['issueArea'] == 5].decisionDirection.value_counts()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 47,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "0.6761904761904762"
      ]
     },
     "execution_count": 47,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "710/1050"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "metadata": {},
   "outputs": [],
   "source": [
    "import pickle\n",
    "\n",
    "models = [knn,logistic,NB_bern,forest,decisiontree]\n",
    "\n",
    "for model in models:\n",
    "    filename = '{model}_continuous_model.sav'.format(model=model)\n",
    "    pickle.dump(model, open(filename, 'wb'))"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "<h2>Pickling 5-feature models "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 71,
   "metadata": {},
   "outputs": [],
   "source": [
    "import pickle\n",
    "\n",
    "models = [knn,logistic,NB_bern,forest,svc,decisiontree]\n",
    "\n",
    "for model in models:\n",
    "    filename = '{model}_model_1022.sav'.format(model=model)\n",
    "    pickle.dump(model, open(filename, 'wb'))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 73,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "0.9726105383009678\n"
     ]
    }
   ],
   "source": [
    "loaded_model = pickle.load(open(filename, 'rb'))\n",
    "result = loaded_model.score(X_test, y_test)\n",
    "print(result)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "metadata": {},
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/Users/nick/opt/anaconda3/lib/python3.8/site-packages/sklearn/base.py:329: UserWarning: Trying to unpickle estimator KNeighborsClassifier from version 0.23.2 when using version 0.23.1. This might lead to breaking code or invalid results. Use at your own risk.\n",
      "  warnings.warn(\n"
     ]
    }
   ],
   "source": [
    "import pickle\n",
    "\n",
    "loaded_model = pickle.load(open('models/knn_5_feature_model_1022.sav', 'rb'))\n",
    "#result = loaded_model.score(X_test, y_test)\n",
    "#print(result)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "metadata": {},
   "outputs": [],
   "source": [
    "supreme = pd.read_csv('data/supreme_1023.csv')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "metadata": {},
   "outputs": [],
   "source": [
    "X = supreme[['subCourt_MQ', 'issue', 'issueArea', 'petitioner', 'respondent']]\n",
    "y = supreme['decisionDirection']\n",
    "\n",
    "# hold out 20% of the data for final testing\n",
    "\n",
    "from sklearn.preprocessing import OneHotEncoder\n",
    "from numpy import asarray\n",
    "\n",
    "encoder = OneHotEncoder(sparse=False)\n",
    "\n",
    "#X = asarray(X)\n",
    "#X = X.reshape(-1,1)\n",
    "y = asarray(y)\n",
    "y = y.reshape(-1,1)\n",
    "\n",
    "X = encoder.fit_transform(X)\n",
    "#y = encoder.fit_transform(y)\n",
    "\n",
    "X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=.2, \n",
    "                                         random_state=10)\n",
    "\n",
    "X_train, X_val, y_train, y_val = train_test_split(X_train, y_train, test_size=0.25, random_state=1)\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "0.9738756404579669"
      ]
     },
     "execution_count": 8,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "loaded_model.score(X_val, y_val)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "loaded_model.predict(X_val)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1,
   "metadata": {},
   "outputs": [],
   "source": [
    "import pandas as pd\n",
    "import numpy as np\n",
    "import matplotlib.pyplot as plt\n",
    "%matplotlib inline\n",
    "\n",
    "from sklearn.neighbors import KNeighborsClassifier\n",
    "from sklearn.metrics import accuracy_score, precision_score, recall_score, f1_score, plot_confusion_matrix\n",
    "from sklearn import metrics\n",
    "from sklearn.metrics import accuracy_score, precision_score, recall_score, roc_auc_score, roc_curve, f1_score, plot_confusion_matrix\n",
    "from sklearn.model_selection import train_test_split\n",
    "from sklearn.linear_model import LogisticRegression\n",
    "from sklearn.naive_bayes import GaussianNB\n",
    "from sklearn.svm import SVC\n",
    "from sklearn.tree import DecisionTreeClassifier\n",
    "from sklearn.ensemble import RandomForestClassifier"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "metadata": {},
   "outputs": [],
   "source": [
    "import pandas as pd \n",
    "\n",
    "supreme = pd.read_csv('data/supreme_1023.csv')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "KNN accuracy is 0.7681700297299007\n",
      "Precision: 0.7682,   Recall: 0.7682\n",
      "f1 score:  0.768174057403109\n",
      "DecisionTree accuracy is 0.83072933139351\n",
      "Precision: 0.8308,   Recall: 0.8307\n",
      "f1 score:  0.8307392877819054\n"
     ]
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 2 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 2 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "from project_functions import find_scores\n",
    "\n",
    "X = supreme[['subCourt_MQ', 'issue', 'issueArea']]\n",
    "y = supreme['decisionDirection']\n",
    "\n",
    "X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=.2, \n",
    "                                         random_state=10)\n",
    "\n",
    "KNN = KNeighborsClassifier(n_neighbors=20).fit(X_train, y_train)\n",
    "DecisionTree = DecisionTreeClassifier().fit(X_train,y_train)\n",
    "\n",
    "\n",
    "find_scores(X, y, 'KNN', KNeighborsClassifier(n_neighbors=20))\n",
    "find_scores(X, y, 'DecisionTree', DecisionTreeClassifier())"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "metadata": {},
   "outputs": [],
   "source": [
    "import pickle\n",
    "\n",
    "filename = 'decision_tree_continuous_model.sav'\n",
    "pickle.dump(DecisionTree, open(filename, 'wb'))\n",
    "\n",
    "filename = 'knn_continuous_model.sav'\n",
    "pickle.dump(KNN, open(filename, 'wb'))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 27,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array([0.])"
      ]
     },
     "execution_count": 27,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "import numpy as np\n",
    "\n",
    "model = pickle.load(open('models/knn_continuous_model.sav', 'rb'))\n",
    "\n",
    "numbers = np.array([-1,50020,5])\n",
    "numbers = numbers.reshape(1,-1)\n",
    "\n",
    "model.predict(numbers)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 31,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "term\n",
       "1946   -3.241000\n",
       "1947   -2.665000\n",
       "1948   -2.155000\n",
       "1949    3.675000\n",
       "1950    4.131000\n",
       "          ...   \n",
       "2015   -3.138997\n",
       "2016   -2.702832\n",
       "2017   -2.213000\n",
       "2018   -2.338000\n",
       "2019   -2.552000\n",
       "Name: subCourt_MQ, Length: 74, dtype: float64"
      ]
     },
     "execution_count": 31,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "supreme.groupby('term').mean()['subCourt_MQ']"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 32,
   "metadata": {},
   "outputs": [],
   "source": [
    "popular_issues = pd.read_csv('data/popular_issues_1026.csv')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 68,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "50020"
      ]
     },
     "execution_count": 68,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "int(issue_number)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 70,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array([0.])"
      ]
     },
     "execution_count": 70,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Define issue number and area number from category based on user choice\n",
    "issue_number = popular_issues[popular_issues['issueDescript'] == issue]['issueNumnber']\n",
    "issue_area = popular_issues[popular_issues['issueDescript'] == issue]['issueArea']\n",
    "\n",
    "# Define MDQ based on year selection\n",
    "MDQ = terms_plus_MQ[terms_plus_MQ.index == term]\n",
    "\n",
    "model = pickle.load(open('models/knn_continuous_model.sav', 'rb'))\n",
    "numbers = np.array([int(MDQ),int(issue_number),int(issue_area)])\n",
    "numbers = numbers.reshape(1,-1)\n",
    "\n",
    "result = model.predict(numbers)\n",
    "result"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 46,
   "metadata": {},
   "outputs": [],
   "source": [
    "issue = 'Abortion'\n",
    "issue_number = popular_issues[popular_issues['issueDescript'] == issue]['issueNumnber']\n",
    "issue_area = popular_issues[popular_issues['issueDescript'] == issue]['issueArea']"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 52,
   "metadata": {
    "scrolled": true
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "term\n",
       "1946   -3.241000\n",
       "1947   -2.665000\n",
       "1948   -2.155000\n",
       "1949    3.675000\n",
       "1950    4.131000\n",
       "          ...   \n",
       "2015   -3.138997\n",
       "2016   -2.702832\n",
       "2017   -2.213000\n",
       "2018   -2.338000\n",
       "2019   -2.552000\n",
       "Name: subCourt_MQ, Length: 74, dtype: float64"
      ]
     },
     "execution_count": 52,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "terms_plus_MQ = supreme.groupby('term').mean()['subCourt_MQ']\n",
    "terms_plus_MQ"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 58,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "term\n",
       "2004    1.541\n",
       "Name: subCourt_MQ, dtype: float64"
      ]
     },
     "execution_count": 58,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "terms_plus_MQ[terms_plus_MQ.index == 2004]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 59,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "term\n",
       "2004    1.541\n",
       "Name: subCourt_MQ, dtype: float64"
      ]
     },
     "execution_count": 59,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "term = 2004\n",
    "MDQ = terms_plus_MQ[terms_plus_MQ.index == term]"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "<h1>Addition of subCourt - DO NOT RUN AGAIN"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 65,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "KNN accuracy is 0.8309190967170599\n",
      "Precision: 0.8317,   Recall: 0.8309\n",
      "f1 score:  0.8309555994260553\n",
      "LogReg accuracy is 0.6489341514327281\n",
      "Precision: 0.6487,   Recall: 0.6489\n",
      "f1 score:  0.6486789240463354\n",
      "Gaussian accuracy is 0.6093997090265039\n",
      "Precision: 0.6360,   Recall: 0.6094\n",
      "f1 score:  0.5816978985433898\n",
      "Decision Tree accuracy is 0.83072933139351\n",
      "Precision: 0.8308,   Recall: 0.8307\n",
      "f1 score:  0.8307392877819054\n",
      "Random Forest accuracy is 0.8308558416092099\n",
      "Precision: 0.8309,   Recall: 0.8309\n",
      "f1 score:  0.8307938567423044\n"
     ]
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 2 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 2 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 2 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 2 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 2 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "# split data into test and train sets\n",
    "\n",
    "X = supreme[['subCourt_MQ', 'issue', 'issueArea']]\n",
    "y = supreme['decisionDirection']\n",
    "\n",
    "# hold out 20% of the data for final testing\n",
    "\n",
    "from sklearn.preprocessing import OneHotEncoder\n",
    "from numpy import asarray\n",
    "\n",
    "encoder = OneHotEncoder(sparse=False)\n",
    "\n",
    "#X = asarray(X)\n",
    "#X = X.reshape(-1,1)\n",
    "y = asarray(y)\n",
    "y = y.reshape(-1,1)\n",
    "\n",
    "X = encoder.fit_transform(X)\n",
    "#y = encoder.fit_transform(y)\n",
    "\n",
    "X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=.2, \n",
    "                                         random_state=10)\n",
    "\n",
    "find_scores('KNN', KNeighborsClassifier(n_neighbors=20))\n",
    "find_scores('LogReg', LogisticRegression())\n",
    "find_scores('Gaussian', GaussianNB())\n",
    "#find_scores('SVM', SVC(kernel='linear'))\n",
    "find_scores('Decision Tree', DecisionTreeClassifier())\n",
    "find_scores('Random Forest', RandomForestClassifier())"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 62,
   "metadata": {
    "scrolled": true
   },
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 720x432 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "#y_test_bin = y_test.map({'France': 0, 'US': 1})\n",
    "\n",
    "knn = KNeighborsClassifier(n_neighbors=10)\n",
    "knn.fit(X_train,y_train)\n",
    "\n",
    "logistic = LogisticRegression()\n",
    "logistic.fit(X_train,y_train)\n",
    "\n",
    "NB_bern = GaussianNB()\n",
    "NB_bern.fit(X_train,y_train)\n",
    "\n",
    "forest = RandomForestClassifier()\n",
    "forest.fit(X_train, y_train)\n",
    "\n",
    "svc = SVC(probability=True)\n",
    "svc.fit(X_train, y_train)\n",
    "\n",
    "decisiontree = DecisionTreeClassifier()\n",
    "decisiontree.fit(X_train, y_train)\n",
    "\n",
    "\n",
    "fpr_knn, tpr_knn, thresholds_knn = roc_curve(y_test, knn.predict_proba(X_test)[:,1])\n",
    "fpr_log, tpr_log, thresholds_log = roc_curve(y_test, logistic.predict_proba(X_test)[:,1])\n",
    "fpr_nb, tpr_nb, thresholds_nb = roc_curve(y_test, NB_bern.predict_proba(X_test)[:,1])\n",
    "fpr_rf, tpr_rf, thresholds_rf = roc_curve(y_test, forest.predict_proba(X_test)[:,1])\n",
    "fpr_svc, tpr_svc, thresholds_svc = roc_curve(y_test, svc.predict_proba(X_test)[:,1])\n",
    "fpr_dt, tpr_dt, thresholds_dt = roc_curve(y_test, decisiontree.predict_proba(X_test)[:,1])\n",
    "\n",
    "plt.figure(figsize=(10, 6))\n",
    "plt.plot(fpr_knn, tpr_knn,lw=2)\n",
    "plt.plot(fpr_log, tpr_log,lw=2)\n",
    "plt.plot(fpr_nb, tpr_nb,lw=2)\n",
    "plt.plot(fpr_rf, tpr_rf,lw=2)\n",
    "plt.plot(fpr_svc, tpr_svc,lw=2)\n",
    "plt.plot(fpr_dt, tpr_dt,lw=2)\n",
    "plt.plot([0,1],[0,1],c='violet')\n",
    "plt.xlim([-0.05,1.05])\n",
    "plt.ylim([-0.05,1.05])\n",
    "plt.xlabel('False positive rate')\n",
    "plt.ylabel('True positive rate')\n",
    "plt.title('ROC Curves for Court MQ, Issue, Issue Area', fontweight='bold', fontsize='20');\n",
    "plt.legend(['KNN','Logistic', 'Naive Bayes', 'Random Forest', 'SVC', 'Decision Tree']);\n",
    "\n",
    "# print(“KNN ROC AUC score = “, roc_auc_score(y_test, knn.predict_proba(X_test)[:,1]))\n",
    "# print(“Logit ROC AUC score = “, roc_auc_score(y_test, logistic.predict_proba(X_test)[:,1]))\n",
    "# print(“Naive Bayes ROC AUC score = “, roc_auc_score(y_test, NB_bern.predict_proba(X_test)[:,1]))\n",
    "# print(“Random Forest ROC AUC score = “, roc_auc_score(y_test, forest.predict_proba(X_test)[:,1]))\n",
    "# print(“Support Vector Machines ROC AUC score = “, roc_auc_score(y_test, svc.predict_proba(X_test)[:,1]))\n",
    "# print(“Decision Tree ROC AUC score = “, roc_auc_score(y_test, decisiontree.predict_proba(X_test)[:,1]))\n",
    "\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 80,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Fitting 5 folds for each of 20 candidates, totalling 100 fits\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "[Parallel(n_jobs=-1)]: Using backend LokyBackend with 4 concurrent workers.\n"
     ]
    },
    {
     "ename": "KeyboardInterrupt",
     "evalue": "",
     "output_type": "error",
     "traceback": [
      "\u001b[0;31m---------------------------------------------------------------------------\u001b[0m",
      "\u001b[0;31mKeyboardInterrupt\u001b[0m                         Traceback (most recent call last)",
      "\u001b[0;32m<ipython-input-80-28e152ee3727>\u001b[0m in \u001b[0;36m<module>\u001b[0;34m\u001b[0m\n\u001b[1;32m     26\u001b[0m \u001b[0mgrid_search\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mGridSearchCV\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mestimator\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mKNeighborsClassifier\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mparam_grid\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mKNN_parameters\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mcv\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;36m5\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mscoring\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;34m'accuracy'\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mverbose\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0;36m1\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mn_jobs\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0;34m-\u001b[0m\u001b[0;36m1\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     27\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m---> 28\u001b[0;31m \u001b[0mgrid_search\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mfit\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mX_train\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0my_train\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m     29\u001b[0m \u001b[0mprint\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m\"Outcomes from the Best KNN Regression Model:\"\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     30\u001b[0m \u001b[0mprint\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m\"Minimum Average Test MSE:\"\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mgrid_search\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mbest_score_\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mround\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;36m3\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
      "\u001b[0;32m~/opt/anaconda3/envs/metis/lib/python3.8/site-packages/sklearn/utils/validation.py\u001b[0m in \u001b[0;36minner_f\u001b[0;34m(*args, **kwargs)\u001b[0m\n\u001b[1;32m     70\u001b[0m                           FutureWarning)\n\u001b[1;32m     71\u001b[0m         \u001b[0mkwargs\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mupdate\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m{\u001b[0m\u001b[0mk\u001b[0m\u001b[0;34m:\u001b[0m \u001b[0marg\u001b[0m \u001b[0;32mfor\u001b[0m \u001b[0mk\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0marg\u001b[0m \u001b[0;32min\u001b[0m \u001b[0mzip\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0msig\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mparameters\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0margs\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m}\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m---> 72\u001b[0;31m         \u001b[0;32mreturn\u001b[0m \u001b[0mf\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m**\u001b[0m\u001b[0mkwargs\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m     73\u001b[0m     \u001b[0;32mreturn\u001b[0m \u001b[0minner_f\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     74\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n",
      "\u001b[0;32m~/opt/anaconda3/envs/metis/lib/python3.8/site-packages/sklearn/model_selection/_search.py\u001b[0m in \u001b[0;36mfit\u001b[0;34m(self, X, y, groups, **fit_params)\u001b[0m\n\u001b[1;32m    734\u001b[0m                 \u001b[0;32mreturn\u001b[0m \u001b[0mresults\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    735\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 736\u001b[0;31m             \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_run_search\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mevaluate_candidates\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    737\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    738\u001b[0m         \u001b[0;31m# For multi-metric evaluation, store the best_index_, best_params_ and\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
      "\u001b[0;32m~/opt/anaconda3/envs/metis/lib/python3.8/site-packages/sklearn/model_selection/_search.py\u001b[0m in \u001b[0;36m_run_search\u001b[0;34m(self, evaluate_candidates)\u001b[0m\n\u001b[1;32m   1186\u001b[0m     \u001b[0;32mdef\u001b[0m \u001b[0m_run_search\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mself\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mevaluate_candidates\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1187\u001b[0m         \u001b[0;34m\"\"\"Search all candidates in param_grid\"\"\"\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m-> 1188\u001b[0;31m         \u001b[0mevaluate_candidates\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mParameterGrid\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mparam_grid\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m   1189\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1190\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n",
      "\u001b[0;32m~/opt/anaconda3/envs/metis/lib/python3.8/site-packages/sklearn/model_selection/_search.py\u001b[0m in \u001b[0;36mevaluate_candidates\u001b[0;34m(candidate_params)\u001b[0m\n\u001b[1;32m    706\u001b[0m                               n_splits, n_candidates, n_candidates * n_splits))\n\u001b[1;32m    707\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 708\u001b[0;31m                 out = parallel(delayed(_fit_and_score)(clone(base_estimator),\n\u001b[0m\u001b[1;32m    709\u001b[0m                                                        \u001b[0mX\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0my\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    710\u001b[0m                                                        \u001b[0mtrain\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mtrain\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mtest\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mtest\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
      "\u001b[0;32m~/opt/anaconda3/envs/metis/lib/python3.8/site-packages/joblib/parallel.py\u001b[0m in \u001b[0;36m__call__\u001b[0;34m(self, iterable)\u001b[0m\n\u001b[1;32m   1059\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1060\u001b[0m             \u001b[0;32mwith\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_backend\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mretrieval_context\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m-> 1061\u001b[0;31m                 \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mretrieve\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m   1062\u001b[0m             \u001b[0;31m# Make sure that we get a last message telling us we are done\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1063\u001b[0m             \u001b[0melapsed_time\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mtime\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mtime\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m \u001b[0;34m-\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_start_time\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
      "\u001b[0;32m~/opt/anaconda3/envs/metis/lib/python3.8/site-packages/joblib/parallel.py\u001b[0m in \u001b[0;36mretrieve\u001b[0;34m(self)\u001b[0m\n\u001b[1;32m    938\u001b[0m             \u001b[0;32mtry\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    939\u001b[0m                 \u001b[0;32mif\u001b[0m \u001b[0mgetattr\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_backend\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m'supports_timeout'\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;32mFalse\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 940\u001b[0;31m                     \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_output\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mextend\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mjob\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mget\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mtimeout\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mtimeout\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    941\u001b[0m                 \u001b[0;32melse\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    942\u001b[0m                     \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_output\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mextend\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mjob\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mget\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
      "\u001b[0;32m~/opt/anaconda3/envs/metis/lib/python3.8/site-packages/joblib/_parallel_backends.py\u001b[0m in \u001b[0;36mwrap_future_result\u001b[0;34m(future, timeout)\u001b[0m\n\u001b[1;32m    540\u001b[0m         AsyncResults.get from multiprocessing.\"\"\"\n\u001b[1;32m    541\u001b[0m         \u001b[0;32mtry\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 542\u001b[0;31m             \u001b[0;32mreturn\u001b[0m \u001b[0mfuture\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mresult\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mtimeout\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mtimeout\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    543\u001b[0m         \u001b[0;32mexcept\u001b[0m \u001b[0mCfTimeoutError\u001b[0m \u001b[0;32mas\u001b[0m \u001b[0me\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    544\u001b[0m             \u001b[0;32mraise\u001b[0m \u001b[0mTimeoutError\u001b[0m \u001b[0;32mfrom\u001b[0m \u001b[0me\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
      "\u001b[0;32m~/opt/anaconda3/envs/metis/lib/python3.8/concurrent/futures/_base.py\u001b[0m in \u001b[0;36mresult\u001b[0;34m(self, timeout)\u001b[0m\n\u001b[1;32m    432\u001b[0m                 \u001b[0;32mreturn\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m__get_result\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    433\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 434\u001b[0;31m             \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_condition\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mwait\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mtimeout\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    435\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    436\u001b[0m             \u001b[0;32mif\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_state\u001b[0m \u001b[0;32min\u001b[0m \u001b[0;34m[\u001b[0m\u001b[0mCANCELLED\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mCANCELLED_AND_NOTIFIED\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
      "\u001b[0;32m~/opt/anaconda3/envs/metis/lib/python3.8/threading.py\u001b[0m in \u001b[0;36mwait\u001b[0;34m(self, timeout)\u001b[0m\n\u001b[1;32m    300\u001b[0m         \u001b[0;32mtry\u001b[0m\u001b[0;34m:\u001b[0m    \u001b[0;31m# restore state no matter what (e.g., KeyboardInterrupt)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    301\u001b[0m             \u001b[0;32mif\u001b[0m \u001b[0mtimeout\u001b[0m \u001b[0;32mis\u001b[0m \u001b[0;32mNone\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 302\u001b[0;31m                 \u001b[0mwaiter\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0macquire\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    303\u001b[0m                 \u001b[0mgotit\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0;32mTrue\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    304\u001b[0m             \u001b[0;32melse\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
      "\u001b[0;31mKeyboardInterrupt\u001b[0m: "
     ]
    }
   ],
   "source": [
    "X = supreme[['subCourt_MQ', 'issue', 'issueArea']]\n",
    "y = supreme['decisionDirection']\n",
    "\n",
    "# hold out 20% of the data for final testing\n",
    "\n",
    "from sklearn.preprocessing import OneHotEncoder\n",
    "from numpy import asarray\n",
    "\n",
    "encoder = OneHotEncoder(sparse=False)\n",
    "\n",
    "#X = asarray(X)\n",
    "#X = X.reshape(-1,1)\n",
    "y = asarray(y)\n",
    "y = y.reshape(-1,1)\n",
    "\n",
    "X = encoder.fit_transform(X)\n",
    "#y = encoder.fit_transform(y)\n",
    "\n",
    "X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=.2, \n",
    "                                         random_state=10)\n",
    "\n",
    "from sklearn.model_selection import GridSearchCV\n",
    "\n",
    "KNN_parameters = {'n_neighbors': np.arange(1,21,1)}\n",
    "\n",
    "grid_search = GridSearchCV(estimator=KNeighborsClassifier(), param_grid = KNN_parameters, cv=5, scoring='accuracy', verbose = 1, n_jobs = -1)\n",
    "\n",
    "grid_search.fit(X_train, y_train)\n",
    "print(\"Outcomes from the Best KNN Regression Model:\")\n",
    "print(\"Minimum Average Test MSE:\", grid_search.best_score_.round(3))\n",
    "print(\"The optimal n:\", grid_search.best_params_['n_neighbors'])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "metadata": {},
   "outputs": [],
   "source": [
    "supreme = pd.read_csv('data/supreme_1023.csv')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "metadata": {},
   "outputs": [],
   "source": [
    "X = supreme[['subCourt_MQ', 'issue', 'issueArea', 'petitioner', 'respondent']]\n",
    "y = supreme['decisionDirection']\n",
    "\n",
    "# hold out 20% of the data for final testing\n",
    "\n",
    "from sklearn.preprocessing import OneHotEncoder\n",
    "from numpy import asarray\n",
    "\n",
    "encoder = OneHotEncoder(sparse=False)\n",
    "\n",
    "#X = asarray(X)\n",
    "#X = X.reshape(-1,1)\n",
    "y = asarray(y)\n",
    "y = y.reshape(-1,1)\n",
    "\n",
    "X = encoder.fit_transform(X)\n",
    "#y = encoder.fit_transform(y)\n",
    "\n",
    "X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=.2, \n",
    "                                         random_state=10)\n",
    "\n",
    "X_train, X_val, y_train, y_val = train_test_split(X_train, y_train, test_size=0.25, random_state=1)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "metadata": {},
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/Users/nick/opt/anaconda3/lib/python3.8/site-packages/sklearn/base.py:329: UserWarning: Trying to unpickle estimator KNeighborsClassifier from version 0.23.2 when using version 0.23.1. This might lead to breaking code or invalid results. Use at your own risk.\n",
      "  warnings.warn(\n"
     ]
    }
   ],
   "source": [
    "import pickle\n",
    "\n",
    "loaded_model = pickle.load(open('models/knn_5_feature_model_1022.sav', 'rb'))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 16,
   "metadata": {},
   "outputs": [],
   "source": [
    "X_sample = X_test[:100]\n",
    "y_sample = y_test[:100]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 18,
   "metadata": {},
   "outputs": [
    {
     "ename": "KeyboardInterrupt",
     "evalue": "",
     "output_type": "error",
     "traceback": [
      "\u001b[0;31m---------------------------------------------------------------------------\u001b[0m",
      "\u001b[0;31mKeyboardInterrupt\u001b[0m                         Traceback (most recent call last)",
      "\u001b[0;32m<ipython-input-18-80606ea5df59>\u001b[0m in \u001b[0;36m<module>\u001b[0;34m\u001b[0m\n\u001b[0;32m----> 1\u001b[0;31m \u001b[0mtrain_preds\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mknn\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mscore\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mX_train\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0my_train\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m",
      "\u001b[0;32m~/opt/anaconda3/lib/python3.8/site-packages/sklearn/base.py\u001b[0m in \u001b[0;36mscore\u001b[0;34m(self, X, y, sample_weight)\u001b[0m\n\u001b[1;32m    497\u001b[0m         \"\"\"\n\u001b[1;32m    498\u001b[0m         \u001b[0;32mfrom\u001b[0m \u001b[0;34m.\u001b[0m\u001b[0mmetrics\u001b[0m \u001b[0;32mimport\u001b[0m \u001b[0maccuracy_score\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 499\u001b[0;31m         \u001b[0;32mreturn\u001b[0m \u001b[0maccuracy_score\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0my\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mpredict\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mX\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0msample_weight\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0msample_weight\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    500\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    501\u001b[0m     \u001b[0;32mdef\u001b[0m \u001b[0m_more_tags\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mself\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
      "\u001b[0;32m~/opt/anaconda3/lib/python3.8/site-packages/sklearn/neighbors/_classification.py\u001b[0m in \u001b[0;36mpredict\u001b[0;34m(self, X)\u001b[0m\n\u001b[1;32m    173\u001b[0m         \u001b[0mX\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mcheck_array\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mX\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0maccept_sparse\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;34m'csr'\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    174\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 175\u001b[0;31m         \u001b[0mneigh_dist\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mneigh_ind\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mkneighbors\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mX\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    176\u001b[0m         \u001b[0mclasses_\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mclasses_\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    177\u001b[0m         \u001b[0m_y\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_y\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
      "\u001b[0;32m~/opt/anaconda3/lib/python3.8/site-packages/sklearn/neighbors/_base.py\u001b[0m in \u001b[0;36mkneighbors\u001b[0;34m(self, X, n_neighbors, return_distance)\u001b[0m\n\u001b[1;32m    660\u001b[0m                 \u001b[0mdelayed_query\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mdelayed\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0m_tree_query_parallel_helper\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    661\u001b[0m                 \u001b[0mparallel_kwargs\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0;34m{\u001b[0m\u001b[0;34m\"prefer\"\u001b[0m\u001b[0;34m:\u001b[0m \u001b[0;34m\"threads\"\u001b[0m\u001b[0;34m}\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 662\u001b[0;31m             chunked_results = Parallel(n_jobs, **parallel_kwargs)(\n\u001b[0m\u001b[1;32m    663\u001b[0m                 delayed_query(\n\u001b[1;32m    664\u001b[0m                     self._tree, X[s], n_neighbors, return_distance)\n",
      "\u001b[0;32m~/opt/anaconda3/lib/python3.8/site-packages/joblib/parallel.py\u001b[0m in \u001b[0;36m__call__\u001b[0;34m(self, iterable)\u001b[0m\n\u001b[1;32m   1027\u001b[0m             \u001b[0;31m# remaining jobs.\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1028\u001b[0m             \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_iterating\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0;32mFalse\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m-> 1029\u001b[0;31m             \u001b[0;32mif\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mdispatch_one_batch\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0miterator\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m   1030\u001b[0m                 \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_iterating\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_original_iterator\u001b[0m \u001b[0;32mis\u001b[0m \u001b[0;32mnot\u001b[0m \u001b[0;32mNone\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1031\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n",
      "\u001b[0;32m~/opt/anaconda3/lib/python3.8/site-packages/joblib/parallel.py\u001b[0m in \u001b[0;36mdispatch_one_batch\u001b[0;34m(self, iterator)\u001b[0m\n\u001b[1;32m    845\u001b[0m                 \u001b[0;32mreturn\u001b[0m \u001b[0;32mFalse\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    846\u001b[0m             \u001b[0;32melse\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 847\u001b[0;31m                 \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_dispatch\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mtasks\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    848\u001b[0m                 \u001b[0;32mreturn\u001b[0m \u001b[0;32mTrue\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    849\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n",
      "\u001b[0;32m~/opt/anaconda3/lib/python3.8/site-packages/joblib/parallel.py\u001b[0m in \u001b[0;36m_dispatch\u001b[0;34m(self, batch)\u001b[0m\n\u001b[1;32m    763\u001b[0m         \u001b[0;32mwith\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_lock\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    764\u001b[0m             \u001b[0mjob_idx\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mlen\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_jobs\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 765\u001b[0;31m             \u001b[0mjob\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_backend\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mapply_async\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mbatch\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mcallback\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mcb\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    766\u001b[0m             \u001b[0;31m# A job can complete so quickly than its callback is\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    767\u001b[0m             \u001b[0;31m# called before we get here, causing self._jobs to\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
      "\u001b[0;32m~/opt/anaconda3/lib/python3.8/site-packages/joblib/_parallel_backends.py\u001b[0m in \u001b[0;36mapply_async\u001b[0;34m(self, func, callback)\u001b[0m\n\u001b[1;32m    206\u001b[0m     \u001b[0;32mdef\u001b[0m \u001b[0mapply_async\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mself\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mfunc\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mcallback\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;32mNone\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    207\u001b[0m         \u001b[0;34m\"\"\"Schedule a func to be run\"\"\"\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 208\u001b[0;31m         \u001b[0mresult\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mImmediateResult\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mfunc\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    209\u001b[0m         \u001b[0;32mif\u001b[0m \u001b[0mcallback\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    210\u001b[0m             \u001b[0mcallback\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mresult\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
      "\u001b[0;32m~/opt/anaconda3/lib/python3.8/site-packages/joblib/_parallel_backends.py\u001b[0m in \u001b[0;36m__init__\u001b[0;34m(self, batch)\u001b[0m\n\u001b[1;32m    570\u001b[0m         \u001b[0;31m# Don't delay the application, to avoid keeping the input\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    571\u001b[0m         \u001b[0;31m# arguments in memory\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 572\u001b[0;31m         \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mresults\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mbatch\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    573\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    574\u001b[0m     \u001b[0;32mdef\u001b[0m \u001b[0mget\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mself\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
      "\u001b[0;32m~/opt/anaconda3/lib/python3.8/site-packages/joblib/parallel.py\u001b[0m in \u001b[0;36m__call__\u001b[0;34m(self)\u001b[0m\n\u001b[1;32m    250\u001b[0m         \u001b[0;31m# change the default number of processes to -1\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    251\u001b[0m         \u001b[0;32mwith\u001b[0m \u001b[0mparallel_backend\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_backend\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mn_jobs\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_n_jobs\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 252\u001b[0;31m             return [func(*args, **kwargs)\n\u001b[0m\u001b[1;32m    253\u001b[0m                     for func, args, kwargs in self.items]\n\u001b[1;32m    254\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n",
      "\u001b[0;32m~/opt/anaconda3/lib/python3.8/site-packages/joblib/parallel.py\u001b[0m in \u001b[0;36m<listcomp>\u001b[0;34m(.0)\u001b[0m\n\u001b[1;32m    250\u001b[0m         \u001b[0;31m# change the default number of processes to -1\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    251\u001b[0m         \u001b[0;32mwith\u001b[0m \u001b[0mparallel_backend\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_backend\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mn_jobs\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_n_jobs\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 252\u001b[0;31m             return [func(*args, **kwargs)\n\u001b[0m\u001b[1;32m    253\u001b[0m                     for func, args, kwargs in self.items]\n\u001b[1;32m    254\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n",
      "\u001b[0;32m~/opt/anaconda3/lib/python3.8/site-packages/sklearn/neighbors/_base.py\u001b[0m in \u001b[0;36m_tree_query_parallel_helper\u001b[0;34m(tree, *args, **kwargs)\u001b[0m\n\u001b[1;32m    490\u001b[0m     \u001b[0munder\u001b[0m \u001b[0mPyPy\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    491\u001b[0m     \"\"\"\n\u001b[0;32m--> 492\u001b[0;31m     \u001b[0;32mreturn\u001b[0m \u001b[0mtree\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mquery\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m*\u001b[0m\u001b[0margs\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m**\u001b[0m\u001b[0mkwargs\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    493\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    494\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n",
      "\u001b[0;31mKeyboardInterrupt\u001b[0m: "
     ]
    }
   ],
   "source": [
    "train_preds = knn.score(X_train, y_train)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 50,
   "metadata": {},
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "<ipython-input-36-b2c9e36fea8a>:7: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples, ), for example using ravel().\n",
      "  model.fit(X_train, y_train)\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "KNN accuracy is 0.7901828072616863\n",
      "Precision: 0.7903,   Recall: 0.7902\n",
      "f1 score:  0.7902078595009765\n"
     ]
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 2 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "X_fake = supreme[['subCourt_MQ', 'issueArea']]\n",
    "y_fake = supreme['decisionDirection']\n",
    "\n",
    "\n",
    "\n",
    "X_train_fake, X_test_fake, y_train_fake, y_test_fake = train_test_split(X_fake, y_fake, test_size=.2, \n",
    "                                         random_state=10)\n",
    "\n",
    "#X_train, X_val, y_train, y_val = train_test_split(X_train, y_train, test_size=0.25, random_state=1)\n",
    "\n",
    "\n",
    "find_scores('KNN', KNeighborsClassifier(n_neighbors=20))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 69,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>subCourt_MQ</th>\n",
       "      <th>issueArea</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>-3.241</td>\n",
       "      <td>8.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>-3.241</td>\n",
       "      <td>8.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>-3.241</td>\n",
       "      <td>8.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>-3.241</td>\n",
       "      <td>8.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>-3.241</td>\n",
       "      <td>8.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>79037</th>\n",
       "      <td>-2.552</td>\n",
       "      <td>13.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>79038</th>\n",
       "      <td>-2.552</td>\n",
       "      <td>13.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>79039</th>\n",
       "      <td>-2.552</td>\n",
       "      <td>13.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>79040</th>\n",
       "      <td>-2.552</td>\n",
       "      <td>13.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>79041</th>\n",
       "      <td>-2.552</td>\n",
       "      <td>13.0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>79042 rows × 2 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "       subCourt_MQ  issueArea\n",
       "0           -3.241        8.0\n",
       "1           -3.241        8.0\n",
       "2           -3.241        8.0\n",
       "3           -3.241        8.0\n",
       "4           -3.241        8.0\n",
       "...            ...        ...\n",
       "79037       -2.552       13.0\n",
       "79038       -2.552       13.0\n",
       "79039       -2.552       13.0\n",
       "79040       -2.552       13.0\n",
       "79041       -2.552       13.0\n",
       "\n",
       "[79042 rows x 2 columns]"
      ]
     },
     "execution_count": 69,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "X_fake"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    " train_preds = knn.score(X_train, y_train)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 58,
   "metadata": {
    "scrolled": true
   },
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "<ipython-input-58-a9234f660083>:2: SettingWithCopyWarning: \n",
      "A value is trying to be set on a copy of a slice from a DataFrame.\n",
      "Try using .loc[row_indexer,col_indexer] = value instead\n",
      "\n",
      "See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n",
      "  X_train_fake['target'] = y_train_fake\n",
      "<ipython-input-58-a9234f660083>:4: SettingWithCopyWarning: \n",
      "A value is trying to be set on a copy of a slice from a DataFrame.\n",
      "Try using .loc[row_indexer,col_indexer] = value instead\n",
      "\n",
      "See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n",
      "  X_test_fake['target'] = y_test_fake\n"
     ]
    }
   ],
   "source": [
    "X_train_fake.columns = ['A', 'B']\n",
    "X_train_fake['target'] = y_train_fake\n",
    "X_test_fake.columns = ['A', 'B']\n",
    "X_test_fake['target'] = y_test_fake"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 65,
   "metadata": {},
   "outputs": [
    {
     "ename": "ValueError",
     "evalue": "query data dimension must match training data dimension",
     "output_type": "error",
     "traceback": [
      "\u001b[0;31m---------------------------------------------------------------------------\u001b[0m",
      "\u001b[0;31mValueError\u001b[0m                                Traceback (most recent call last)",
      "\u001b[0;32m<ipython-input-65-2658e1a69280>\u001b[0m in \u001b[0;36m<module>\u001b[0;34m\u001b[0m\n\u001b[1;32m     21\u001b[0m     \u001b[0;31m#knn.fit(X_train_scaled_fake.drop('target', axis=1), y_train_fake)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     22\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m---> 23\u001b[0;31m     \u001b[0mtrain_preds\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mknn\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mscore\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mX_train_fake\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0my_train_fake\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m     24\u001b[0m     \u001b[0mtest_preds\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mknn\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mscore\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mX_test_fake\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0my_test_fake\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     25\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n",
      "\u001b[0;32m~/opt/anaconda3/lib/python3.8/site-packages/sklearn/base.py\u001b[0m in \u001b[0;36mscore\u001b[0;34m(self, X, y, sample_weight)\u001b[0m\n\u001b[1;32m    497\u001b[0m         \"\"\"\n\u001b[1;32m    498\u001b[0m         \u001b[0;32mfrom\u001b[0m \u001b[0;34m.\u001b[0m\u001b[0mmetrics\u001b[0m \u001b[0;32mimport\u001b[0m \u001b[0maccuracy_score\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 499\u001b[0;31m         \u001b[0;32mreturn\u001b[0m \u001b[0maccuracy_score\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0my\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mpredict\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mX\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0msample_weight\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0msample_weight\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    500\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    501\u001b[0m     \u001b[0;32mdef\u001b[0m \u001b[0m_more_tags\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mself\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
      "\u001b[0;32m~/opt/anaconda3/lib/python3.8/site-packages/sklearn/neighbors/_classification.py\u001b[0m in \u001b[0;36mpredict\u001b[0;34m(self, X)\u001b[0m\n\u001b[1;32m    173\u001b[0m         \u001b[0mX\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mcheck_array\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mX\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0maccept_sparse\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;34m'csr'\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    174\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 175\u001b[0;31m         \u001b[0mneigh_dist\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mneigh_ind\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mkneighbors\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mX\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    176\u001b[0m         \u001b[0mclasses_\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mclasses_\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    177\u001b[0m         \u001b[0m_y\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_y\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
      "\u001b[0;32m~/opt/anaconda3/lib/python3.8/site-packages/sklearn/neighbors/_base.py\u001b[0m in \u001b[0;36mkneighbors\u001b[0;34m(self, X, n_neighbors, return_distance)\u001b[0m\n\u001b[1;32m    660\u001b[0m                 \u001b[0mdelayed_query\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mdelayed\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0m_tree_query_parallel_helper\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    661\u001b[0m                 \u001b[0mparallel_kwargs\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0;34m{\u001b[0m\u001b[0;34m\"prefer\"\u001b[0m\u001b[0;34m:\u001b[0m \u001b[0;34m\"threads\"\u001b[0m\u001b[0;34m}\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 662\u001b[0;31m             chunked_results = Parallel(n_jobs, **parallel_kwargs)(\n\u001b[0m\u001b[1;32m    663\u001b[0m                 delayed_query(\n\u001b[1;32m    664\u001b[0m                     self._tree, X[s], n_neighbors, return_distance)\n",
      "\u001b[0;32m~/opt/anaconda3/lib/python3.8/site-packages/joblib/parallel.py\u001b[0m in \u001b[0;36m__call__\u001b[0;34m(self, iterable)\u001b[0m\n\u001b[1;32m   1027\u001b[0m             \u001b[0;31m# remaining jobs.\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1028\u001b[0m             \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_iterating\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0;32mFalse\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m-> 1029\u001b[0;31m             \u001b[0;32mif\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mdispatch_one_batch\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0miterator\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m   1030\u001b[0m                 \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_iterating\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_original_iterator\u001b[0m \u001b[0;32mis\u001b[0m \u001b[0;32mnot\u001b[0m \u001b[0;32mNone\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1031\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n",
      "\u001b[0;32m~/opt/anaconda3/lib/python3.8/site-packages/joblib/parallel.py\u001b[0m in \u001b[0;36mdispatch_one_batch\u001b[0;34m(self, iterator)\u001b[0m\n\u001b[1;32m    845\u001b[0m                 \u001b[0;32mreturn\u001b[0m \u001b[0;32mFalse\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    846\u001b[0m             \u001b[0;32melse\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 847\u001b[0;31m                 \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_dispatch\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mtasks\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    848\u001b[0m                 \u001b[0;32mreturn\u001b[0m \u001b[0;32mTrue\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    849\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n",
      "\u001b[0;32m~/opt/anaconda3/lib/python3.8/site-packages/joblib/parallel.py\u001b[0m in \u001b[0;36m_dispatch\u001b[0;34m(self, batch)\u001b[0m\n\u001b[1;32m    763\u001b[0m         \u001b[0;32mwith\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_lock\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    764\u001b[0m             \u001b[0mjob_idx\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mlen\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_jobs\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 765\u001b[0;31m             \u001b[0mjob\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_backend\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mapply_async\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mbatch\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mcallback\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mcb\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    766\u001b[0m             \u001b[0;31m# A job can complete so quickly than its callback is\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    767\u001b[0m             \u001b[0;31m# called before we get here, causing self._jobs to\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
      "\u001b[0;32m~/opt/anaconda3/lib/python3.8/site-packages/joblib/_parallel_backends.py\u001b[0m in \u001b[0;36mapply_async\u001b[0;34m(self, func, callback)\u001b[0m\n\u001b[1;32m    206\u001b[0m     \u001b[0;32mdef\u001b[0m \u001b[0mapply_async\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mself\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mfunc\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mcallback\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;32mNone\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    207\u001b[0m         \u001b[0;34m\"\"\"Schedule a func to be run\"\"\"\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 208\u001b[0;31m         \u001b[0mresult\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mImmediateResult\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mfunc\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    209\u001b[0m         \u001b[0;32mif\u001b[0m \u001b[0mcallback\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    210\u001b[0m             \u001b[0mcallback\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mresult\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
      "\u001b[0;32m~/opt/anaconda3/lib/python3.8/site-packages/joblib/_parallel_backends.py\u001b[0m in \u001b[0;36m__init__\u001b[0;34m(self, batch)\u001b[0m\n\u001b[1;32m    570\u001b[0m         \u001b[0;31m# Don't delay the application, to avoid keeping the input\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    571\u001b[0m         \u001b[0;31m# arguments in memory\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 572\u001b[0;31m         \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mresults\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mbatch\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    573\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    574\u001b[0m     \u001b[0;32mdef\u001b[0m \u001b[0mget\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mself\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
      "\u001b[0;32m~/opt/anaconda3/lib/python3.8/site-packages/joblib/parallel.py\u001b[0m in \u001b[0;36m__call__\u001b[0;34m(self)\u001b[0m\n\u001b[1;32m    250\u001b[0m         \u001b[0;31m# change the default number of processes to -1\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    251\u001b[0m         \u001b[0;32mwith\u001b[0m \u001b[0mparallel_backend\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_backend\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mn_jobs\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_n_jobs\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 252\u001b[0;31m             return [func(*args, **kwargs)\n\u001b[0m\u001b[1;32m    253\u001b[0m                     for func, args, kwargs in self.items]\n\u001b[1;32m    254\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n",
      "\u001b[0;32m~/opt/anaconda3/lib/python3.8/site-packages/joblib/parallel.py\u001b[0m in \u001b[0;36m<listcomp>\u001b[0;34m(.0)\u001b[0m\n\u001b[1;32m    250\u001b[0m         \u001b[0;31m# change the default number of processes to -1\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    251\u001b[0m         \u001b[0;32mwith\u001b[0m \u001b[0mparallel_backend\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_backend\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mn_jobs\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_n_jobs\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 252\u001b[0;31m             return [func(*args, **kwargs)\n\u001b[0m\u001b[1;32m    253\u001b[0m                     for func, args, kwargs in self.items]\n\u001b[1;32m    254\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n",
      "\u001b[0;32m~/opt/anaconda3/lib/python3.8/site-packages/sklearn/neighbors/_base.py\u001b[0m in \u001b[0;36m_tree_query_parallel_helper\u001b[0;34m(tree, *args, **kwargs)\u001b[0m\n\u001b[1;32m    490\u001b[0m     \u001b[0munder\u001b[0m \u001b[0mPyPy\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    491\u001b[0m     \"\"\"\n\u001b[0;32m--> 492\u001b[0;31m     \u001b[0;32mreturn\u001b[0m \u001b[0mtree\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mquery\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m*\u001b[0m\u001b[0margs\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m**\u001b[0m\u001b[0mkwargs\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    493\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    494\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n",
      "\u001b[0;32msklearn/neighbors/_binary_tree.pxi\u001b[0m in \u001b[0;36msklearn.neighbors._kd_tree.BinaryTree.query\u001b[0;34m()\u001b[0m\n",
      "\u001b[0;31mValueError\u001b[0m: query data dimension must match training data dimension"
     ]
    }
   ],
   "source": [
    "# These are visualizations of a classification problem\n",
    "\n",
    "# from visualize import generate_moons_df, preprocess, plot_boundaries\n",
    "\n",
    "# fig, axes = plt.subplots(nrows=2, ncols=3, figsize=(14, 10), sharey=True, sharex=True)\n",
    "\n",
    "# X_train, X_test, y_train, y_test = preprocess(generate_moons_df(n_samples=100, noise=0.1))\n",
    "\n",
    "# knn = loaded_model\n",
    "\n",
    "# train_preds = knn.score(X_train, y_train)\n",
    "# test_preds = knn.score(X_sample, y_sample)\n",
    "\n",
    "# These are visualizations of a classification problem\n",
    "\n",
    "ks = [1]\n",
    "\n",
    "for k, ax in zip(ks, axes.flatten()):\n",
    "    \n",
    "    #knn = KNeighborsClassifier(n_neighbors=k)\n",
    "    #knn.fit(X_train_scaled_fake.drop('target', axis=1), y_train_fake)\n",
    "    \n",
    "    train_preds = knn.score(X_train_fake, y_train_fake)\n",
    "    test_preds = knn.score(X_test_fake, y_test_fake)\n",
    "    \n",
    "    ax.set_title(f'k={knn.n_neighbors} \\n train acc {train_preds:.2f} \\n test acc: {test_preds:.2f}')\n",
    "    plot_boundaries(knn, X_test_fake, X_train_fake, ax=ax)\n",
    "    \n",
    "fig.tight_layout()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 33,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array([[0., 0., 0., ..., 0., 0., 0.],\n",
       "       [0., 0., 0., ..., 0., 0., 0.],\n",
       "       [0., 0., 0., ..., 0., 0., 0.],\n",
       "       ...,\n",
       "       [0., 0., 0., ..., 0., 0., 0.],\n",
       "       [0., 0., 0., ..., 0., 0., 0.],\n",
       "       [0., 0., 0., ..., 0., 0., 0.]])"
      ]
     },
     "execution_count": 33,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "X_train['A']"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 28,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array([<matplotlib.axes._subplots.AxesSubplot object at 0x11a116a60>,\n",
       "       <matplotlib.axes._subplots.AxesSubplot object at 0x11a147610>,\n",
       "       <matplotlib.axes._subplots.AxesSubplot object at 0x11a1854f0>,\n",
       "       <matplotlib.axes._subplots.AxesSubplot object at 0x11a1b5370>,\n",
       "       <matplotlib.axes._subplots.AxesSubplot object at 0x11a1e51f0>,\n",
       "       <matplotlib.axes._subplots.AxesSubplot object at 0x11a217130>],\n",
       "      dtype=object)"
      ]
     },
     "execution_count": 28,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "axes.flatten()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": 43,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "KNN accuracy is 0.7681700297299007\n",
      "Precision: 0.7682,   Recall: 0.7682\n",
      "f1 score:  0.768174057403109\n"
     ]
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 2 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "import warnings\n",
    "warnings.filterwarnings('ignore')\n",
    "\n",
    "find_scores('KNN', KNeighborsClassifier(n_neighbors=20))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "supreme.certReason.fillna(12)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": 296,
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": 300,
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "<h3> RBG"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 115,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "term\n",
       "1993   -0.211\n",
       "1994   -0.451\n",
       "1995   -0.532\n",
       "1996   -0.601\n",
       "1997   -0.730\n",
       "1998   -0.796\n",
       "1999   -1.250\n",
       "2000   -1.487\n",
       "2001   -1.616\n",
       "2002   -1.683\n",
       "2003   -1.754\n",
       "2004   -1.683\n",
       "2005   -1.572\n",
       "2006   -1.684\n",
       "2007   -1.673\n",
       "2008   -1.718\n",
       "2009   -1.670\n",
       "2010   -2.072\n",
       "2011   -2.354\n",
       "2012   -2.445\n",
       "2013   -2.430\n",
       "2014   -2.521\n",
       "2015   -2.639\n",
       "2016   -2.733\n",
       "2017   -2.785\n",
       "2018   -2.830\n",
       "2019   -2.816\n",
       "Name: martin_quinn, dtype: float64"
      ]
     },
     "execution_count": 115,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "RBG_MQ_per_term = supreme[supreme.justice == 109].groupby('term').mean()['martin_quinn']\n",
    "RBG_MQ_per_term"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 76,
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": 67,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Index(['caseId', 'docketId', 'caseIssuesId', 'voteId', 'dateDecision',\n",
       "       'decisionType', 'usCite', 'sctCite', 'ledCite', 'lexisCite', 'term',\n",
       "       'naturalCourt', 'chief', 'docket', 'caseName', 'dateArgument',\n",
       "       'dateRearg', 'petitioner', 'petitionerState', 'respondent',\n",
       "       'respondentState', 'jurisdiction', 'adminAction', 'adminActionState',\n",
       "       'threeJudgeFdc', 'caseOrigin', 'caseOriginState', 'caseSource',\n",
       "       'caseSourceState', 'lcDisagreement', 'certReason', 'lcDisposition',\n",
       "       'lcDispositionDirection', 'declarationUncon', 'caseDisposition',\n",
       "       'caseDispositionUnusual', 'partyWinning', 'precedentAlteration',\n",
       "       'voteUnclear', 'issue', 'issueArea', 'decisionDirection',\n",
       "       'decisionDirectionDissent', 'authorityDecision1', 'authorityDecision2',\n",
       "       'lawType', 'lawSupp', 'lawMinor', 'majOpinWriter', 'majOpinAssigner',\n",
       "       'splitVote', 'majVotes', 'minVotes', 'justice', 'justiceName_x', 'vote',\n",
       "       'opinion', 'direction', 'majority', 'firstAgreement', 'secondAgreement',\n",
       "       'justiceName_y', 'martin_quinn', 'post_sd', 'post_med', 'post_025',\n",
       "       'post_975'],\n",
       "      dtype='object')"
      ]
     },
     "execution_count": 67,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "supreme[supreme.decisionDirection == 3].groupby('caseId').mean()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "<h3>Null values<h3>"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 84,
   "metadata": {
    "scrolled": true
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "61"
      ]
     },
     "execution_count": 84,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Identify null columns\n",
    "\n",
    "len(supreme.isnull().sum().sort_values(ascending=False))"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "That's the amount of features in the data set! This will need to be tackled individually."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "metadata": {},
   "outputs": [],
   "source": [
    "import sklearn.preprocessing\n",
    "\n",
    "def get_unique_values(values):\n",
    "    \"\"\"\n",
    "    Get unique, sorted list of values with NA coding.\n",
    "    \"\"\"\n",
    "    # Initialize list and extend\n",
    "    value_list = [-1]\n",
    "    value_list.extend(values.fillna(-1).astype(int).unique())\n",
    "\n",
    "    # Return sorted set\n",
    "    return sorted(set(value_list))\n",
    "\n",
    "\n",
    "# binarize column function\n",
    "\n",
    "def binarize_values(values):\n",
    "    \"\"\"\n",
    "    Binarize values.\n",
    "    \"\"\"\n",
    "    # Get value codes \n",
    "    value_codes = get_unique_values(values)\n",
    "    \n",
    "    # Return value codes and binarized matrix\n",
    "    return value_codes, sklearn.preprocessing.label_binarize(values.fillna(-1).astype(int),\n",
    "                                    value_codes)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "metadata": {
    "scrolled": true
   },
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/Users/nick/opt/anaconda3/envs/metis/lib/python3.8/site-packages/sklearn/utils/validation.py:67: FutureWarning: Pass classes=[-1, 0, 78, 79, 80, 81, 82, 85, 86, 87, 88, 89, 90, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116] as keyword args. From version 0.25 passing these as positional arguments will result in an error\n",
      "  warnings.warn(\"Pass {} as keyword args. From version 0.25 \"\n"
     ]
    }
   ],
   "source": [
    "test = binarize_values(supreme.secondAgreement)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 82,
   "metadata": {
    "scrolled": true
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "61"
      ]
     },
     "execution_count": 82,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": 53,
   "metadata": {
    "scrolled": true
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<AxesSubplot:>"
      ]
     },
     "execution_count": 53,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "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\n",
      "text/plain": [
       "<Figure size 432x288 with 2 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "import seaborn as sns\n",
    "\n",
    "sns.heatmap(supreme.corr())"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 15,
   "metadata": {},
   "outputs": [],
   "source": [
    "from corr_plot import *\n",
    "\n",
    "def corrplot(data, size_scale=500, marker='s'):\n",
    "    corr = pd.melt(data.reset_index(), id_vars='index')\n",
    "    corr.columns = ['x', 'y', 'value']\n",
    "    heatmap(\n",
    "        corr['x'], corr['y'],\n",
    "        color=corr['value'], color_range=[-1, 1],\n",
    "        palette=sns.diverging_palette(20, 220, n=256),\n",
    "        size=corr['value'].abs(), size_range=[0,1],\n",
    "        marker=marker,\n",
    "        x_order=data.columns,\n",
    "        y_order=data.columns[::-1],\n",
    "        size_scale=size_scale\n",
    "    )\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 27,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 720x720 with 2 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": 82,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 720x720 with 2 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "%matplotlib inline\n",
    "data = supreme[['petitioner', 'respondent', 'jurisdiction', 'adminAction', 'caseOrigin', 'caseSource', 'lcDisagreement',\n",
    "              'certReason', 'lcDisposition', 'lcDispositionDirection', 'term', 'naturalCourt', 'issue', 'issueArea']]\n",
    "\n",
    "corr = data.corr()\n",
    "plt.figure(figsize=(10, 10))\n",
    "ax = sns.heatmap(\n",
    "    corr, \n",
    "    vmin=-1, vmax=1, center=0,\n",
    "    cmap=sns.diverging_palette(20, 220, n=200),\n",
    "    square=True\n",
    ")\n",
    "ax.set_xticklabels(\n",
    "    ax.get_xticklabels(),\n",
    "    rotation=45,\n",
    "    horizontalalignment='right'\n",
    ");"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 19,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 720x720 with 2 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "plt.figure(figsize=(10, 10))\n",
    "corrplot(corr)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "import seaborn as sns\n",
    "\n",
    "sns.pairplot(supreme)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "from sklearn.model_selection import train_test_split\n",
    "\n",
    "X, y = supreme['petitioner', 'respondent'], supreme['caseDisposition']\n",
    "\n",
    "# hold out 20% of the data for final testing\n",
    "X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=.2, \n",
    "                                        random_state=10)\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "from sklearn.linear_model import LogisticRegression\n",
    "\n",
    "model = LogisticRegression()\n",
    "model.fit(X_train,y_train)\n",
    "\n",
    "y_pred = model.predict(X_test)\n",
    "logreg_score = metrics.accuracy_score(y_test, y_pred)\n",
    "\n",
    "print(\"The accuracy of this Logistic Regression model is\", logreg_score)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "fig, ax = plt.subplots(figsize=(7,7))\n",
    "plot_confusion_matrix()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 71,
   "metadata": {},
   "outputs": [],
   "source": [
    "justice_details = pd.read_csv('data/JusticeDetails.csv')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 78,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Unnamed: 0</th>\n",
       "      <th>justiceName</th>\n",
       "      <th>justiceAbbrev</th>\n",
       "      <th>yearsOnCourt</th>\n",
       "      <th>MQ</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>5</td>\n",
       "      <td>Justice Hugo Black (1937 - 1971)</td>\n",
       "      <td>HLBlack</td>\n",
       "      <td>1937 - 1971</td>\n",
       "      <td>-1.289401</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>4</td>\n",
       "      <td>Justice Stanley Forman Reed (1938 - 1957)</td>\n",
       "      <td>SFReed</td>\n",
       "      <td>1938 - 1957</td>\n",
       "      <td>1.000628</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>3</td>\n",
       "      <td>Justice Felix Frankfurter (1939 - 1962)</td>\n",
       "      <td>FFrankfurter</td>\n",
       "      <td>1939 - 1962</td>\n",
       "      <td>0.916553</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>2</td>\n",
       "      <td>Justice William O. Douglas (1939 - 1975)</td>\n",
       "      <td>WODouglas</td>\n",
       "      <td>1939 - 1975</td>\n",
       "      <td>-5.569703</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>7</td>\n",
       "      <td>Justice Frank Murphy (1940 - 1949)</td>\n",
       "      <td>FMurphy</td>\n",
       "      <td>1940 - 1949</td>\n",
       "      <td>-1.662970</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>6</td>\n",
       "      <td>Justice Wiley Blount Rutledge (1941 - 1954)</td>\n",
       "      <td>WBRutledge</td>\n",
       "      <td>1941 - 1954</td>\n",
       "      <td>-1.667530</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6</th>\n",
       "      <td>1</td>\n",
       "      <td>Justice Robert H. Jackson (1941 - 1954)</td>\n",
       "      <td>RHJackson</td>\n",
       "      <td>1941 - 1954</td>\n",
       "      <td>0.977357</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7</th>\n",
       "      <td>0</td>\n",
       "      <td>Justice Harold Hitz Burton (1945 - 1958)</td>\n",
       "      <td>HHBurton</td>\n",
       "      <td>1945 - 1958</td>\n",
       "      <td>1.024334</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8</th>\n",
       "      <td>8</td>\n",
       "      <td>Chief Justice Fred M. Vinson (1946 - 1953)</td>\n",
       "      <td>FMVinson</td>\n",
       "      <td>1946 - 1953</td>\n",
       "      <td>0.994447</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9</th>\n",
       "      <td>10</td>\n",
       "      <td>Justice Sherman Minton (1949 - 1956)</td>\n",
       "      <td>SMinton</td>\n",
       "      <td>1949 - 1956</td>\n",
       "      <td>1.143907</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>10</th>\n",
       "      <td>9</td>\n",
       "      <td>Justice Tom C. Clark (1949 - 1967)</td>\n",
       "      <td>TCClark</td>\n",
       "      <td>1949 - 1967</td>\n",
       "      <td>0.425676</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>11</th>\n",
       "      <td>11</td>\n",
       "      <td>Chief Justice Earl Warren (1953 - 1969)</td>\n",
       "      <td>EWarren</td>\n",
       "      <td>1953 - 1969</td>\n",
       "      <td>-1.310599</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>12</th>\n",
       "      <td>12</td>\n",
       "      <td>Justice John Marshall Harlan (1955 - 1971)</td>\n",
       "      <td>JHarlan2</td>\n",
       "      <td>1955 - 1971</td>\n",
       "      <td>1.674035</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>13</th>\n",
       "      <td>15</td>\n",
       "      <td>Justice Potter Stewart (1956 - 1981)</td>\n",
       "      <td>PStewart</td>\n",
       "      <td>1956 - 1981</td>\n",
       "      <td>0.388428</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>14</th>\n",
       "      <td>13</td>\n",
       "      <td>Justice William J. Brennan, Jr. (1956 - 1990)</td>\n",
       "      <td>WJBrennan</td>\n",
       "      <td>1956 - 1990</td>\n",
       "      <td>-1.810590</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>15</th>\n",
       "      <td>14</td>\n",
       "      <td>Justice Charles Evan Whittaker (1957 - 1962)</td>\n",
       "      <td>CEWhittaker</td>\n",
       "      <td>1957 - 1962</td>\n",
       "      <td>1.183905</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>16</th>\n",
       "      <td>17</td>\n",
       "      <td>Justice Arthur Goldberg (1962 - 1965)</td>\n",
       "      <td>AJGoldberg</td>\n",
       "      <td>1962 - 1965</td>\n",
       "      <td>-1.101903</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>17</th>\n",
       "      <td>16</td>\n",
       "      <td>Justice Byron White (1962 - 1993)</td>\n",
       "      <td>BRWhite</td>\n",
       "      <td>1962 - 1993</td>\n",
       "      <td>0.455692</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>18</th>\n",
       "      <td>18</td>\n",
       "      <td>Justice Abe Fortas (1965 - 1969)</td>\n",
       "      <td>AFortas</td>\n",
       "      <td>1965 - 1969</td>\n",
       "      <td>-1.347557</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>19</th>\n",
       "      <td>19</td>\n",
       "      <td>Justice Thurgood Marshall (1967 - 1991)</td>\n",
       "      <td>TMarshall</td>\n",
       "      <td>1967 - 1991</td>\n",
       "      <td>-2.793880</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>20</th>\n",
       "      <td>20</td>\n",
       "      <td>Chief Justice Warren E. Burger (1969 - 1986)</td>\n",
       "      <td>WEBurger</td>\n",
       "      <td>1969 - 1986</td>\n",
       "      <td>1.897801</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>21</th>\n",
       "      <td>21</td>\n",
       "      <td>Justice Harry Blackmun (1970 - 1994)</td>\n",
       "      <td>HABlackmun</td>\n",
       "      <td>1970 - 1994</td>\n",
       "      <td>0.025338</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>22</th>\n",
       "      <td>23</td>\n",
       "      <td>Chief Justice William Rehnquist (1972 - 1986)</td>\n",
       "      <td>WHRehnquist</td>\n",
       "      <td>1972 - 1986</td>\n",
       "      <td>3.266051</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>23</th>\n",
       "      <td>22</td>\n",
       "      <td>Justice F. Powell Jr. (1972 - 1987)</td>\n",
       "      <td>LFPowell</td>\n",
       "      <td>1972 - 1987</td>\n",
       "      <td>0.970040</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>24</th>\n",
       "      <td>24</td>\n",
       "      <td>Justice John Paul Stevens (1975 - 2010)</td>\n",
       "      <td>JPStevens</td>\n",
       "      <td>1975 - 2010</td>\n",
       "      <td>-1.444298</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>25</th>\n",
       "      <td>25</td>\n",
       "      <td>Justice Sandra Day OConnor (1981 - 2006)</td>\n",
       "      <td>SDOConnor</td>\n",
       "      <td>1981 - 2006</td>\n",
       "      <td>1.169868</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>26</th>\n",
       "      <td>26</td>\n",
       "      <td>Justice Antonin Scalia (1986 - 2016)</td>\n",
       "      <td>AScalia</td>\n",
       "      <td>1986 - 2016</td>\n",
       "      <td>2.474370</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>27</th>\n",
       "      <td>27</td>\n",
       "      <td>Justice Anthony Kennedy (1988 - 2018)</td>\n",
       "      <td>AMKennedy</td>\n",
       "      <td>1988 - 2018</td>\n",
       "      <td>0.753325</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>28</th>\n",
       "      <td>28</td>\n",
       "      <td>Justice David Souter (1990 - 2009)</td>\n",
       "      <td>DHSouter</td>\n",
       "      <td>1990 - 2009</td>\n",
       "      <td>-0.655100</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>29</th>\n",
       "      <td>29</td>\n",
       "      <td>Justice Clarence Thomas (1991 - Present)</td>\n",
       "      <td>CThomas</td>\n",
       "      <td>1991 - Present</td>\n",
       "      <td>3.585896</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>30</th>\n",
       "      <td>30</td>\n",
       "      <td>Justice Ruth Bader Ginsburg (1993 - 2020)</td>\n",
       "      <td>RBGinsburg</td>\n",
       "      <td>1993 - 2020</td>\n",
       "      <td>-1.654922</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>31</th>\n",
       "      <td>31</td>\n",
       "      <td>Justice Stephen Breyer (1994 - Present)</td>\n",
       "      <td>SGBreyer</td>\n",
       "      <td>1994 - Present</td>\n",
       "      <td>-1.199085</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>32</th>\n",
       "      <td>32</td>\n",
       "      <td>Chief Justice John Roberts (2005 - Present)</td>\n",
       "      <td>JGRoberts</td>\n",
       "      <td>2005 - Present</td>\n",
       "      <td>0.966792</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>33</th>\n",
       "      <td>33</td>\n",
       "      <td>Justice Samuuel Alito (2006 - Present)</td>\n",
       "      <td>SAAlito</td>\n",
       "      <td>2006 - Present</td>\n",
       "      <td>1.818806</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>34</th>\n",
       "      <td>34</td>\n",
       "      <td>Justice Sonia Sotomayor (2009 - Present)</td>\n",
       "      <td>SSotomayor</td>\n",
       "      <td>2009 - Present</td>\n",
       "      <td>-2.613032</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>35</th>\n",
       "      <td>35</td>\n",
       "      <td>Justice Elena Kagan (2010 - Present)</td>\n",
       "      <td>EKagan</td>\n",
       "      <td>2010 - Present</td>\n",
       "      <td>-1.577116</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>36</th>\n",
       "      <td>36</td>\n",
       "      <td>Justice Neil Gorsuch (2017 - Present)</td>\n",
       "      <td>NMGorsuch</td>\n",
       "      <td>2017 - Present</td>\n",
       "      <td>0.975672</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>37</th>\n",
       "      <td>37</td>\n",
       "      <td>Justice Brett Kavanaugh (2018 - Present)</td>\n",
       "      <td>BMKavanaugh</td>\n",
       "      <td>2018 - Present</td>\n",
       "      <td>0.543556</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "    Unnamed: 0                                    justiceName justiceAbbrev  \\\n",
       "0            5               Justice Hugo Black (1937 - 1971)       HLBlack   \n",
       "1            4      Justice Stanley Forman Reed (1938 - 1957)        SFReed   \n",
       "2            3        Justice Felix Frankfurter (1939 - 1962)  FFrankfurter   \n",
       "3            2       Justice William O. Douglas (1939 - 1975)     WODouglas   \n",
       "4            7             Justice Frank Murphy (1940 - 1949)       FMurphy   \n",
       "5            6    Justice Wiley Blount Rutledge (1941 - 1954)    WBRutledge   \n",
       "6            1        Justice Robert H. Jackson (1941 - 1954)     RHJackson   \n",
       "7            0       Justice Harold Hitz Burton (1945 - 1958)      HHBurton   \n",
       "8            8     Chief Justice Fred M. Vinson (1946 - 1953)      FMVinson   \n",
       "9           10           Justice Sherman Minton (1949 - 1956)       SMinton   \n",
       "10           9             Justice Tom C. Clark (1949 - 1967)       TCClark   \n",
       "11          11        Chief Justice Earl Warren (1953 - 1969)       EWarren   \n",
       "12          12     Justice John Marshall Harlan (1955 - 1971)      JHarlan2   \n",
       "13          15           Justice Potter Stewart (1956 - 1981)      PStewart   \n",
       "14          13  Justice William J. Brennan, Jr. (1956 - 1990)     WJBrennan   \n",
       "15          14   Justice Charles Evan Whittaker (1957 - 1962)   CEWhittaker   \n",
       "16          17          Justice Arthur Goldberg (1962 - 1965)    AJGoldberg   \n",
       "17          16              Justice Byron White (1962 - 1993)       BRWhite   \n",
       "18          18               Justice Abe Fortas (1965 - 1969)       AFortas   \n",
       "19          19        Justice Thurgood Marshall (1967 - 1991)     TMarshall   \n",
       "20          20   Chief Justice Warren E. Burger (1969 - 1986)      WEBurger   \n",
       "21          21           Justice Harry Blackmun (1970 - 1994)    HABlackmun   \n",
       "22          23  Chief Justice William Rehnquist (1972 - 1986)   WHRehnquist   \n",
       "23          22            Justice F. Powell Jr. (1972 - 1987)      LFPowell   \n",
       "24          24        Justice John Paul Stevens (1975 - 2010)     JPStevens   \n",
       "25          25       Justice Sandra Day OConnor (1981 - 2006)     SDOConnor   \n",
       "26          26           Justice Antonin Scalia (1986 - 2016)       AScalia   \n",
       "27          27          Justice Anthony Kennedy (1988 - 2018)     AMKennedy   \n",
       "28          28             Justice David Souter (1990 - 2009)      DHSouter   \n",
       "29          29       Justice Clarence Thomas (1991 - Present)       CThomas   \n",
       "30          30      Justice Ruth Bader Ginsburg (1993 - 2020)    RBGinsburg   \n",
       "31          31        Justice Stephen Breyer (1994 - Present)      SGBreyer   \n",
       "32          32    Chief Justice John Roberts (2005 - Present)     JGRoberts   \n",
       "33          33         Justice Samuuel Alito (2006 - Present)       SAAlito   \n",
       "34          34       Justice Sonia Sotomayor (2009 - Present)    SSotomayor   \n",
       "35          35           Justice Elena Kagan (2010 - Present)        EKagan   \n",
       "36          36          Justice Neil Gorsuch (2017 - Present)     NMGorsuch   \n",
       "37          37       Justice Brett Kavanaugh (2018 - Present)   BMKavanaugh   \n",
       "\n",
       "      yearsOnCourt        MQ  \n",
       "0      1937 - 1971 -1.289401  \n",
       "1      1938 - 1957  1.000628  \n",
       "2      1939 - 1962  0.916553  \n",
       "3      1939 - 1975 -5.569703  \n",
       "4      1940 - 1949 -1.662970  \n",
       "5      1941 - 1954 -1.667530  \n",
       "6      1941 - 1954  0.977357  \n",
       "7      1945 - 1958  1.024334  \n",
       "8      1946 - 1953  0.994447  \n",
       "9      1949 - 1956  1.143907  \n",
       "10     1949 - 1967  0.425676  \n",
       "11     1953 - 1969 -1.310599  \n",
       "12     1955 - 1971  1.674035  \n",
       "13     1956 - 1981  0.388428  \n",
       "14     1956 - 1990 -1.810590  \n",
       "15     1957 - 1962  1.183905  \n",
       "16     1962 - 1965 -1.101903  \n",
       "17     1962 - 1993  0.455692  \n",
       "18     1965 - 1969 -1.347557  \n",
       "19     1967 - 1991 -2.793880  \n",
       "20     1969 - 1986  1.897801  \n",
       "21     1970 - 1994  0.025338  \n",
       "22     1972 - 1986  3.266051  \n",
       "23     1972 - 1987  0.970040  \n",
       "24     1975 - 2010 -1.444298  \n",
       "25     1981 - 2006  1.169868  \n",
       "26     1986 - 2016  2.474370  \n",
       "27     1988 - 2018  0.753325  \n",
       "28     1990 - 2009 -0.655100  \n",
       "29  1991 - Present  3.585896  \n",
       "30     1993 - 2020 -1.654922  \n",
       "31  1994 - Present -1.199085  \n",
       "32  2005 - Present  0.966792  \n",
       "33  2006 - Present  1.818806  \n",
       "34  2009 - Present -2.613032  \n",
       "35  2010 - Present -1.577116  \n",
       "36  2017 - Present  0.975672  \n",
       "37  2018 - Present  0.543556  "
      ]
     },
     "execution_count": 78,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "justice_details"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 179,
   "metadata": {},
   "outputs": [],
   "source": [
    "judge_data['years_in_office'] = judge_data['term'] - judge_data['term'].min()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 182,
   "metadata": {},
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "<ipython-input-182-246be3048ac0>:3: MatplotlibDeprecationWarning: \n",
      "The createFontList function was deprecated in Matplotlib 3.2 and will be removed two minor releases later. Use FontManager.addfont instead.\n",
      "  font_objects = mpl.font_manager.createFontList(font_paths)\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "['Verdana', 'DIN Alternate', 'Oriya MN', '.SF Compact Text', 'System Font', 'Arial Narrow', 'Quicksand', 'Songti SC', 'Hiragino Sans', 'Reprise Special Std', 'Hoefler Text', 'Heiti TC', 'Inkpen2 Special Std', 'Georgia', 'Finale Lyrics', 'Trebuchet MS', 'Plantagenet Cherokee', 'Kohinoor Telugu', 'Hiragino Sans', 'Lao Sangam MN', 'Comic Sans MS', 'Lao MN', 'System Font', 'Geeza Pro', 'Helsinki Std', 'STIXIntegralsUp', 'STIXSizeFiveSym', 'Devanagari MT', 'Marker Felt', 'Reprise Text Std', 'Courier New', 'Telugu MN', 'STIXNonUnicode', 'Tamil MN', 'Euphemia UCAS', 'Baskerville', 'Chalkboard SE', 'Bodoni Ornaments', 'MaestroTimes', 'PT Serif', 'Apple Symbols', 'STIXSizeFourSym', '.SF Compact Text', 'Chalkboard', 'System Font', 'Papyrus', 'Reprise Chords Std', 'Hiragino Sans', 'Hiragino Sans', 'Quicksand', 'Seravek', 'Avenir Next Condensed', 'Inkpen2 Text Std', 'Opus Percussion Std', 'Didot', '.SF Compact Rounded', 'Malayalam Sangam MN', '.SF Compact Text', 'Farah', 'Bodoni 72 Smallcaps', 'Courier New', 'STIXNonUnicode', 'Verdana', 'Opus Ornaments Std', 'Noto Nastaliq Urdu', 'STIXSizeTwoSym', 'Inkpen2 Metronome Std', '.SF Compact Display', 'Times New Roman', 'Heiti TC', '.SF NS Display Condensed', 'Reprise Stamp Std', 'Arial', 'Marion', 'Georgia', '.SF Compact Rounded', 'Apple Braille', 'Reprise Big Time Std', 'Kokonor', 'Raanana', 'Hiragino Sans GB', '.Keyboard', 'Herculanum', 'Arial Hebrew', 'Opus Figured Bass Std', 'Lucida Grande', '.SF NS Display Condensed', '.SF NS Symbols', '.SF Compact Text', '.SF NS Symbols', 'Apple Braille', 'Farisi', 'Comic Sans MS', 'Reprise Title Std', 'Times New Roman', 'Silom', 'Nadeem', 'Iowan Old Style', 'DIN Condensed', 'Charter', 'Georgia', '.SF Compact Rounded', 'Sana', 'Verdana', 'Bodoni 72 Oldstyle', 'Andale Mono', 'Optima', 'Arial', '.SF Compact Rounded', 'Apple Braille', 'STIXIntegralsUpSm', 'Gill Sans', 'Krungthep', 'Finale Numerics', 'STIXSizeThreeSym', 'Reprise Rehearsal Std', 'STIXSizeOneSym', 'Skia', '.SF Compact Rounded', 'Hiragino Sans', 'STIXIntegralsUpSm', '.SF NS Symbols', 'System Font', 'Kannada Sangam MN', 'Al Tarikh', '.SF Compact Rounded', 'Apple SD Gothic Neo', 'Arial Rounded MT Bold', '.SF NS Symbols', 'STIXGeneral', 'PingFang HK', 'Diwan Kufi', 'PT Serif Caption', '.SF NS Display Condensed', 'STIXSizeTwoSym', 'Mshtakan', 'Beirut', 'Al Nile', 'Sinhala Sangam MN', 'Chalkduster', 'Wingdings', 'Apple Braille', 'Shree Devanagari 714', 'Arial Unicode MS', 'Trebuchet MS', 'Helsinki Text Std', 'InaiMathi', 'Gujarati Sangam MN', 'Copperplate', 'Helvetica', 'Opus Chords Std', 'Palatino', 'STIXNonUnicode', 'Trattatello', 'Tahoma', 'MaestroTimes', 'Apple Braille', 'Savoye LET', 'Athelas', 'Noteworthy', '.SF NS Symbols', 'Quicksand', 'Arial Narrow', 'Reprise Script Std', 'Opus Metronome Std', 'Sukhumvit Set', 'Sinhala MN', 'Opus Chords Sans Std', 'Muna', 'Arial', 'Malayalam MN', 'Opus Text Std', '.SF Compact Text', '.Arabic UI Text', 'STIXIntegralsUpD', 'Courier New', 'Arial Black', 'Rockwell', 'Baghdad', 'Helsinki Special Std', '.SF NS Display Condensed', 'Bodoni 72', 'Finale Copyist Text Ext', 'Myanmar MN', 'Hiragino Sans', 'Hiragino Sans', 'Gurmukhi MN', 'Apple Chancery', 'Opus Figured Bass Extras Std', 'Hiragino Sans', 'Telugu Sangam MN', 'Times New Roman', 'STIXGeneral', 'Bangla Sangam MN', 'Wingdings 2', '.Helvetica Neue DeskInterface', 'PT Mono', 'Superclarendon', 'Wingdings 3', 'Trebuchet MS', '.SF NS Display Condensed', '.SF Compact Display', 'STIXGeneral', 'Symbol', 'Finale Lyrics', 'System Font', 'American Typewriter', 'ITF Devanagari', 'Gurmukhi MT', '.SF NS Symbols', 'Opus PlainChords Std', '.SF Compact Rounded', 'Gurmukhi Sangam MN', '.SF Compact Display', '.SF Compact Text', 'Times New Roman', 'Hiragino Maru Gothic Pro', 'Tamil Sangam MN', '.SF NS Symbols', 'Microsoft Sans Serif', '.SF Compact Text', 'Zapfino', '.SF Compact Text', 'STIXVariants', 'Bradley Hand', 'System Font', 'Helsinki Metronome Std', 'System Font', 'Opus Big Time Std', 'Hoefler Text', 'System Font', 'Webdings', 'Inkpen2 Chords Std', 'Futura', '.LastResort', 'DecoType Naskh', '.SF NS Display Condensed', 'Zapf Dingbats', '.Aqua Kana', 'Big Caslon', 'STIXNonUnicode', 'Mishafi Gold', 'Khmer Sangam MN', 'Opus Chords Sans Condensed Std', 'Inkpen2 Script Std', '.SF NS Display Condensed', 'System Font', 'Bangla MN', 'Arial Narrow', 'Opus Roman Chords Std', '.SF Compact Rounded', 'Kohinoor Devanagari', 'Al Bayan', 'Avenir Next', '.SF Compact Text', 'System Font', 'Khmer MN', '.SF Compact Display', '.SF Compact Display', 'Opus Special Std', 'Gujarati MT', 'STIXSizeOneSym', 'System Font', '.SF NS Text Condensed', 'STIXIntegralsD', 'Reprise Metronome Std', 'Kefa', 'Arial Narrow', 'Brush Script MT', 'Helvetica Neue', 'System Font', 'Courier New', 'Inkpen2 Std', '.SF NS Symbols', 'Quicksand', 'Ayuthaya', 'Verdana', 'Opus Note Names Std', '.SF Compact Display', 'Hiragino Sans', 'System Font', '.SF NS Display Condensed', 'STIXIntegralsD', 'STIXIntegralsUp', '.SF Compact Text', 'Quicksand', 'Hiragino Mincho ProN', '.SF NS Text Condensed', 'Hiragino Sans', 'Finale Lyrics', '.SF NS Display Condensed', 'STIXIntegralsSm', 'Times', 'STIXSizeThreeSym', 'Reprise Std', 'Oriya Sangam MN', 'Thonburi', 'Corsiva Hebrew', '.SF Compact Display', '.SF Compact Text', 'Luminari', '.SF NS Rounded', 'Arial', 'STIXIntegralsSm', 'KufiStandardGK', 'PT Sans', 'Trebuchet MS', 'STIXIntegralsUpD', '.SF NS Text Condensed', 'Opus Special Extra Std', 'Avenir', '.SF Compact Display', 'Devanagari Sangam MN', '.SF NS Text Condensed', 'MaestroTimes', 'Opus Function Symbols Std', 'Georgia', 'Tahoma', 'System Font', '.SF Compact Text', 'AppleMyungjo', 'Cochin', '.SF NS Text Condensed', '.SF NS Symbols', 'STIXSizeFourSym', 'STIXGeneral', '.SF NS Text Condensed', 'Mishafi', 'Kannada MN', 'Opus Std', 'Waseem', 'Kohinoor Bangla', 'Phosphate', 'Damascus', 'Sathu', 'Snell Roundhand', 'Myanmar Sangam MN', 'AppleGothic', 'System Font', 'Menlo', 'System Font', '.SF Compact Rounded', 'Finale Copyist Text', 'MaestroTimes', '.Arabic UI Display', 'Diwan Thuluth', 'STIXVariants', '.SF Compact Display', 'Impact', 'Kailasa', 'SignPainter', 'New Peninim MT']\n"
     ]
    }
   ],
   "source": [
    "import matplotlib as mpl\n",
    "font_paths = mpl.font_manager.findSystemFonts()\n",
    "font_objects = mpl.font_manager.createFontList(font_paths)\n",
    "font_names = [f.name for f in font_objects]\n",
    "print(font_names)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 161,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 1008x720 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "judges = ['Chief Justice John Roberts (2005 - Present)', 'Justice Elena Kagan (2010 - Present)']\n",
    "import seaborn as sns\n",
    "\n",
    "plt.figure(figsize=(14,10))\n",
    "plt.ylim(-6,6)\n",
    "\n",
    "for judge in judges:\n",
    "    abbrev = justice_details[justice_details['justiceName'] == judge]['justiceAbbrev'].values[0]\n",
    "    #abbrev = justice_details[justice_details['justiceName'] == judges]['justiceAbbrev'].values[0]\n",
    "    judge_data = supreme[supreme.justiceName_x == abbrev].groupby('term').mean()\n",
    "    judge_data.reset_index(inplace=True)\n",
    "    ax = sns.lineplot(data=judge_data, x='term', y='martin_quinn', linewidth=4)\n",
    "    sns.scatterplot(data=judge_data, x='term', y='martin_quinn', s=100)\n",
    "    \n",
    "ax.set_title('Fantasy SCOTUS MQ over time \\n', fontsize=20, style='oblique')\n",
    "ax.set_xlabel('Year', fontsize=14)\n",
    "ax.set_ylabel('Martin-Quinn\\n Score', fontsize=14, rotation = 0, horizontalalignment='right')\n",
    "ax.legend([judge for judge in judges], fontsize=15);"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "import seaborn as sns\n",
    "\n",
    "RBG = supreme[supreme.justice == 109].groupby('term').mean()\n",
    "sotomayor = supreme[supreme.justice == 113].groupby('term').mean()\n",
    "alito = supreme[supreme.justice == 112].groupby('term').mean()\n",
    "kagan = supreme[supreme.justice == 114].groupby('term').mean()\n",
    "gorsuch = supreme[supreme.justice == 115].groupby('term').mean()\n",
    "kavanaugh = supreme[supreme.justice == 116].groupby('term').mean()\n",
    "roberts = supreme[supreme.justice == 111].groupby('term').mean()\n",
    "breyer = supreme[supreme.justice == 110].groupby('term').mean()\n",
    "thomas = supreme[supreme.justice == 108].groupby('term').mean()\n",
    "\n",
    "sns.lineplot(data=RBG, x='term', y='martin_quinn')\n",
    "sns.lineplot(data=sonya, x='term', y='martin_quinn')\n",
    "sns.lineplot(data=alito, x='term', y='martin_quinn')\n",
    "sns.lineplot(data=kagan, x='term', y='martin_quinn')\n",
    "sns.lineplot(data=gorsuch, x='term', y='martin_quinn')\n",
    "sns.lineplot(data=kavanaugh, x='term', y='martin_quinn')\n",
    "sns.lineplot(data=roberts, x='term', y='martin_quinn')\n",
    "sns.lineplot(data=breyer, x='term', y='martin_quinn')\n",
    "sns.lineplot(data=thomas, x='term', y='martin_quinn');"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "<h4>Current makeup of court</h4>"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 83,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "import seaborn as sns\n",
    "\n",
    "RBG = supreme[supreme.justice == 109].groupby('term').mean()\n",
    "sotomayor = supreme[supreme.justice == 113].groupby('term').mean()\n",
    "alito = supreme[supreme.justice == 112].groupby('term').mean()\n",
    "kagan = supreme[supreme.justice == 114].groupby('term').mean()\n",
    "gorsuch = supreme[supreme.justice == 115].groupby('term').mean()\n",
    "kavanaugh = supreme[supreme.justice == 116].groupby('term').mean()\n",
    "roberts = supreme[supreme.justice == 111].groupby('term').mean()\n",
    "breyer = supreme[supreme.justice == 110].groupby('term').mean()\n",
    "thomas = supreme[supreme.justice == 108].groupby('term').mean()\n",
    "\n",
    "sns.lineplot(data=RBG, x='term', y='martin_quinn')\n",
    "sns.lineplot(data=sonya, x='term', y='martin_quinn')\n",
    "sns.lineplot(data=alito, x='term', y='martin_quinn')\n",
    "sns.lineplot(data=kagan, x='term', y='martin_quinn')\n",
    "sns.lineplot(data=gorsuch, x='term', y='martin_quinn')\n",
    "sns.lineplot(data=kavanaugh, x='term', y='martin_quinn')\n",
    "sns.lineplot(data=roberts, x='term', y='martin_quinn')\n",
    "sns.lineplot(data=breyer, x='term', y='martin_quinn')\n",
    "sns.lineplot(data=thomas, x='term', y='martin_quinn');"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "<h4>Irrelevant Outcome Code"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "# Set nominal amount of null Case Disposition values to 11 (coded by SCD as \"no disposition\")\n",
    "\n",
    "supreme.loc[supreme.caseDisposition.isnull() == True, 'caseDisposition'] = 11"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "# Drop ~3,000 NaN votes - no consistency found or ability to infer what these votes were, and distribution was random\n",
    "\n",
    "supreme = supreme.dropna(subset=['vote'])\n",
    "len(supreme)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "# Test functions to compute outcome variable (0 for affirmed decision, 1 for reversed decision, -1 for for neither)\n",
    "\n",
    "from project_functions import get_outcome_map, get_outcome\n",
    "\n",
    "outcome = get_outcome_map()\n",
    "get_outcome(supreme.vote[1], supreme.caseDisposition[1])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "# Assign outcome_code \n",
    "\n",
    "outcome_code = [get_outcome(supreme.vote[i], supreme.caseDisposition[i]) for i in supreme.caseDisposition]\n",
    "supreme['outcome_code'] = outcome_code"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "<h4>First attempt at creating mask for classification (before integrating vote into final outcome number)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 15,
   "metadata": {},
   "outputs": [],
   "source": [
    "zero_amounts = [2,6,7,10,11]\n",
    "\n",
    "zero_mask = supreme.caseDisposition.isin(zero_amounts)\n",
    "\n",
    "\n",
    "one_amounts = [3,4,5,8,9]\n",
    "\n",
    "one_mask = supreme.caseDisposition.isin(one_amounts)\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 16,
   "metadata": {},
   "outputs": [],
   "source": [
    "supreme.caseDisposition = supreme.caseDisposition.where(zero_mask,0)\n",
    "supreme.caseDisposition = supreme.caseDisposition.where(one_mask,1)"
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.8.3"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 4
}
